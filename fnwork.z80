
;[]===========================================================[]
CursUp
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	LD	L,(IY+PanelCFl)
	LD	H,(IY+PanelCFh)
	LD	A,H
	OR	L
	JR	NZ,CursUp1
	LD	A,(IY+PanelFFl)
	OR	(IY+PanelFFh)
	RET	Z
	JR	ScrlDn1
CursUp1	DEC	HL
	PUSH	HL
	CALL	ResInvert
	POP	HL
	LD	(IY+PanelCFl),L
	LD	(IY+PanelCFh),H
	CALL	SetInvert
	CALL	PrnFileInfo
	RET 
ScrollDown
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	LD	A,(IY+PanelFFl)
	OR	(IY+PanelFFh)
	RET	Z
ScrlDn1	BIT	0,(IY+ViewFlg)
	JP	NZ,ScrlDnP
	BIT	1,(IY+ViewFlg)
	JP	NZ,ScrlDnT
	IN	A,(PAGE1)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE1),A
	LD	L,(IY+PanelEFl)
	LD	H,(IY+PanelEFh)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	E,L
	LD	D,H
	ADD	HL,HL
	ADD	HL,DE
	SET	6,H
	PUSH	HL
	POP	IX
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	DEC	HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	E,L
	LD	D,H
	ADD	HL,HL
	ADD	HL,DE
	SET	6,H
	LD	DE,WorkBuffer
	LD	BC,#000E
	PUSH	HL
	LDIR 
	POP	HL
	LD	DE,#18*#11
	ADD	HL,DE
	LD	E,LX
	LD	D,HX
	OR	A
	SBC	HL,DE
	ADD	HL,DE
	JR	C,$+3
	EX	DE,HL
	LD	DE,WorkBuffer+#10
	LD	C,#0E
	PUSH	HL
	LDIR 
	POP	HL
	LD	DE,#18*#11
	ADD	HL,DE
	LD	E,LX
	LD	D,HX
	OR	A
	SBC	HL,DE
	ADD	HL,DE
	JR	C,$+3
	EX	DE,HL
	LD	DE,WorkBuffer+#20
	LD	C,#0E
	LDIR 
	POP	AF
	OUT	(PAGE1),A
	LD	B,PanelCol*#10+FileCol
	LD	C,PanelCol*#10+SFileCol
	CALL	InsPrnColor
	CALL	ResInvert
	PUSH	IY
	IN	A,(YPORT)	;Сохраняем Y порт
	LD	C,A
	IN	A,(PAGE1)
	LD	B,A
	PUSH	BC
	LD	A,#50
	OUT	(PAGE1),A
	LD	L,(IY+PanelXl)
	LD	H,(IY+PanelXh)
	LD	DE,#0006
	ADD	HL,DE
	LD	D,#3F
	LD	E,#3F+#08
	LD	BC,#802E
	PUSH	HL
	CALL	ScrDIRDnUp
	POP	DE
	LD	HL,WorkBuffer+#01
	LD	BC,#0C3F
	LD	A,(HL)
	DEC	HL
	OR	A
	PUSH	DE
	CALL	NZ,PrintName
	POP	HL
	LD	DE,#0068
	ADD	HL,DE
	LD	D,#3F
	LD	E,#3F+#08
	LD	BC,#802E
	PUSH	HL
	CALL	ScrDIRDnUp
	POP	DE
	LD	HL,WorkBuffer+#11
	LD	BC,#0C3F
	LD	A,(HL)
	DEC	HL
	OR	A
	PUSH	DE
	CALL	NZ,PrintName
	POP	HL
	LD	DE,#0068
	ADD	HL,DE
	LD	D,#3F
	LD	E,#3F+#08
	LD	BC,#802E
	PUSH	HL
	CALL	ScrDIRDnUp
	POP	DE
	LD	HL,WorkBuffer+#21
	LD	BC,#0C3F
	LD	A,(HL)
	DEC	HL
	OR	A
	CALL	NZ,PrintName
	POP	BC
	LD	A,B
	OUT	(PAGE1),A
	LD	A,C
	OUT	(YPORT),A
	POP	IY
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	DEC	HL
	LD	(IY+PanelFFl),L
	LD	(IY+PanelFFh),H
	CALL	SetInvert
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	PrnHScrBar
	RET 
ScrlDnP
	IN	A,(PAGE1)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE1),A
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	DEC	HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	E,L
	LD	D,H
	ADD	HL,HL
	ADD	HL,DE
	SET	6,H
	LD	DE,WorkBuffer
	LD	BC,#0018
	LDIR 
	POP	AF
	OUT	(PAGE1),A
	LD	IX,WorkBuffer
	LD	HL,WorkBuffer
	LD	DE,WorkBuffer+#200
	LD	BC,#000D
	LDIR 
	LD	A,#01
	LD	(DE),A
	INC	DE
	BIT	4,(IX+#0E)
	CALL	NZ,PutDIRTxt
	CALL	Z,GetFileLen
	LD	A,#01
	LD	(DE),A
	INC	DE
	CALL	GetData
	LD	A,#01
	LD	(DE),A
	INC	DE
	CALL	GetTime
	LD	B,PanelCol*#10+FileCol
	LD	C,PanelCol*#10+SFileCol
	CALL	InsPrnColor
	CALL	ResInvert
	PUSH	IY
	IN	A,(YPORT)	;Сохраняем Y порт
	LD	C,A
	IN	A,(PAGE1)
	LD	B,A
	PUSH	BC
	LD	A,#50
	OUT	(PAGE1),A
	LD	L,(IY+PanelXl)
	LD	H,(IY+PanelXh)
	LD	DE,#0004
	ADD	HL,DE
	LD	D,#3F
	LD	E,#3F+#08
	LD	BC,#8890
	PUSH	HL
	CALL	ScrDIRDnUp
	POP	DE
	LD	HL,WorkBuffer+#200
	LD	BC,#263F
	CALL	PrintName
	POP	BC
	LD	A,B
	OUT	(PAGE1),A
	LD	A,C
	OUT	(YPORT),A
	POP	IY
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	DEC	HL
	LD	(IY+PanelFFl),L
	LD	(IY+PanelFFh),H
	CALL	SetInvert
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	PrnVScrBar
	RET 
ScrlDnT
	IN	A,(PAGE1)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE1),A
	LD	HL,WorkBuffer
	LD	B,#18
	LD	A,#80
	PUSH	HL
	LD	(HL),A
	INC	L
	DJNZ	$-2
	POP	DE
	LD	HL,#4000
	LD	C,(IY+PanelFFl)
	LD	B,(IY+PanelFFh)
	DEC	BC
	LD	A,B
	OR	C
	JR	Z,ScrDdn2
ScrDdn1	PUSH	BC
	LD	A,(HL)
	AND	#7F
	LD	E,A
	LD	A,(HL)
	LD	(DE),A
	LD	BC,#0010
	ADD	HL,BC
	POP	BC
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,ScrDdn1
ScrDdn2	LD	DE,WorkBuffer+#100
	LD	BC,#0010
	LDIR 
	POP	AF
	OUT	(PAGE1),A
	LD	HL,WorkBuffer+#100
	LD	DE,WorkBuffer+#200
	CALL	MakeTreeLine
	LD	B,PanelCol*#10+FileCol
	LD	C,PanelCol*#10+SFileCol
	CALL	InsPrnColor
	CALL	ResInvert
	PUSH	IY
	IN	A,(YPORT)	;Сохраняем Y порт
	LD	C,A
	IN	A,(PAGE1)
	LD	B,A
	PUSH	BC
	LD	A,#50
	OUT	(PAGE1),A
	LD	L,(IY+PanelXl)
	LD	H,(IY+PanelXh)
	LD	DE,#0006
	ADD	HL,DE
	LD	D,#3F
	LD	E,#3F+#08
	LD	BC,#8890
	PUSH	HL
	CALL	ScrDIRDnUp
	POP	DE
	LD	HL,WorkBuffer+#200
	LD	BC,#243F
	CALL	PrintName
	POP	BC
	LD	A,B
	OUT	(PAGE1),A
	LD	A,C
	OUT	(YPORT),A
	POP	IY
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	DEC	HL
	LD	(IY+PanelFFl),L
	LD	(IY+PanelFFh),H
	CALL	SetInvert
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	PrnVScrBar
	RET 
;[]===========================================================[]
CursDown
	LD	C,(IY+PanelEFl)
	LD	B,(IY+PanelEFh)
	LD	A,B
	OR	C
	RET	Z
	LD	L,(IY+PanelCFl)
	LD	H,(IY+PanelCFh)
	INC	HL
	PUSH	HL
	LD	E,(IY+PanelFFl)
	LD	D,(IY+PanelFFh)
	ADD	HL,DE
	OR	A
	SBC	HL,BC
	POP	HL
	RET	NC
	LD	E,(IY+PanelFPl)
	LD	D,(IY+PanelFPh)
	OR	A
	SBC	HL,DE
	JR	NC,ScrlUp1
	ADD	HL,DE
	PUSH	HL
	CALL	ResInvert
	POP	HL
	LD	(IY+PanelCFl),L
	LD	(IY+PanelCFh),H
	CALL	SetInvert
	CALL	PrnFileInfo
	RET 
ScrollUp
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelFPl)
	LD	D,(IY+PanelFPh)
	ADD	HL,DE
	LD	E,(IY+PanelEFl)
	LD	D,(IY+PanelEFh)
	OR	A
	SBC	HL,DE
	RET	NC
ScrlUp1	BIT	0,(IY+ViewFlg)
	JP	NZ,ScrlUpP
	BIT	1,(IY+ViewFlg)
	JP	NZ,ScrlUpT
	IN	A,(PAGE1)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE1),A
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	DE,#0011
	ADD	HL,DE
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	E,L
	LD	D,H
	ADD	HL,HL
	ADD	HL,DE
	SET	6,H
	LD	DE,WorkBuffer
	LD	BC,#000E
	PUSH	HL
	LDIR 
	POP	HL
	LD	DE,#18*#11
	ADD	HL,DE
	LD	DE,WorkBuffer+#10
	LD	C,#0E
	PUSH	HL
	LDIR 
	POP	HL
	LD	DE,#18*#11
	ADD	HL,DE
	LD	DE,WorkBuffer+#20
	LD	C,#0E
	LDIR 
	POP	AF
	OUT	(PAGE1),A
	LD	B,PanelCol*#10+FileCol
	LD	C,PanelCol*#10+SFileCol
	CALL	InsPrnColor
	CALL	ResInvert
	PUSH	IY
	IN	A,(YPORT)	;Сохраняем Y порт
	LD	C,A
	IN	A,(PAGE1)
	LD	B,A
	PUSH	BC
	LD	A,#50
	OUT	(PAGE1),A
	LD	L,(IY+PanelXl)
	LD	H,(IY+PanelXh)
	LD	DE,#0006
	ADD	HL,DE
	LD	D,#3F+#08
	LD	E,#3F
	LD	BC,#802E
	PUSH	HL
	CALL	ScrDIRDnUp
	POP	DE
	LD	HL,WorkBuffer+#01
	LD	BC,#0CBF
	LD	A,(HL)
	DEC	HL
	OR	A
	PUSH	DE
	CALL	NZ,PrintName
	POP	HL
	LD	DE,#0068
	ADD	HL,DE
	LD	D,#3F+#08
	LD	E,#3F
	LD	BC,#802E
	PUSH	HL
	CALL	ScrDIRDnUp
	POP	DE
	LD	HL,WorkBuffer+#11
	LD	BC,#0CBF
	LD	A,(HL)
	DEC	HL
	OR	A
	PUSH	DE
	CALL	NZ,PrintName
	POP	HL
	LD	DE,#0068
	ADD	HL,DE
	LD	D,#3F+#08
	LD	E,#3F
	LD	BC,#802E
	PUSH	HL
	CALL	ScrDIRDnUp
	POP	DE
	LD	HL,WorkBuffer+#21
	LD	BC,#0CBF
	LD	A,(HL)
	DEC	HL
	OR	A
	CALL	NZ,PrintName
	POP	BC
	LD	A,B
	OUT	(PAGE1),A
	LD	A,C
	OUT	(YPORT),A
	POP	IY
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	INC	HL
	LD	(IY+PanelFFl),L
	LD	(IY+PanelFFh),H
	CALL	SetInvert
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	PrnHScrBar
	RET 
ScrlUpP
	IN	A,(PAGE1)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE1),A
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	DE,#0012
	ADD	HL,DE
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	E,L
	LD	D,H
	ADD	HL,HL
	ADD	HL,DE
	SET	6,H
	LD	DE,WorkBuffer
	LD	BC,#0018
	LDIR 
	POP	AF
	OUT	(PAGE1),A
	LD	IX,WorkBuffer
	LD	HL,WorkBuffer
	LD	DE,WorkBuffer+#200
	LD	BC,#000D
	LDIR 
	LD	A,#01
	LD	(DE),A
	INC	DE
	BIT	4,(IX+#0E)
	CALL	NZ,PutDIRTxt
	CALL	Z,GetFileLen
	LD	A,#01
	LD	(DE),A
	INC	DE
	CALL	GetData
	LD	A,#01
	LD	(DE),A
	INC	DE
	CALL	GetTime
	LD	B,PanelCol*#10+FileCol
	LD	C,PanelCol*#10+SFileCol
	CALL	InsPrnColor
	CALL	ResInvert
	PUSH	IY
	IN	A,(YPORT)	;Сохраняем Y порт
	LD	C,A
	IN	A,(PAGE1)
	LD	B,A
	PUSH	BC
	LD	A,#50
	OUT	(PAGE1),A
	LD	L,(IY+PanelXl)
	LD	H,(IY+PanelXh)
	LD	DE,#0004
	ADD	HL,DE
	LD	D,#3F+#08
	LD	E,#3F
	LD	BC,#8890
	PUSH	HL
	CALL	ScrDIRDnUp
	POP	DE
	LD	HL,WorkBuffer+#200
	LD	BC,#26C7
	CALL	PrintName
	POP	BC
	LD	A,B
	OUT	(PAGE1),A
	LD	A,C
	OUT	(YPORT),A
	POP	IY
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	INC	HL
	LD	(IY+PanelFFl),L
	LD	(IY+PanelFFh),H
	CALL	SetInvert
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	PrnVScrBar
	RET 
ScrlUpT
	IN	A,(PAGE1)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE1),A
	LD	HL,WorkBuffer
	LD	B,#18
	LD	A,#80
	PUSH	HL
	LD	(HL),A
	INC	L
	DJNZ	$-2
	POP	DE
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	BC,#0012
	ADD	HL,BC
	LD	C,L
	LD	B,H
	LD	HL,#4000
ScrDup1	PUSH	BC
	LD	A,(HL)
	AND	#7F
	LD	E,A
	LD	A,(HL)
	LD	(DE),A
	LD	BC,#0010
	ADD	HL,BC
	POP	BC
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,ScrDup1
	LD	DE,WorkBuffer+#100
	LD	BC,#0010
	LDIR 
	POP	AF
	OUT	(PAGE1),A
	LD	HL,WorkBuffer+#100
	LD	DE,WorkBuffer+#200
	CALL	MakeTreeLine
	LD	B,PanelCol*#10+FileCol
	LD	C,PanelCol*#10+SFileCol
	CALL	InsPrnColor
	CALL	ResInvert
	PUSH	IY
	IN	A,(YPORT)	;Сохраняем Y порт
	LD	C,A
	IN	A,(PAGE1)
	LD	B,A
	PUSH	BC
	LD	A,#50
	OUT	(PAGE1),A
	LD	L,(IY+PanelXl)
	LD	H,(IY+PanelXh)
	LD	DE,#0006
	ADD	HL,DE
	LD	D,#3F+#08
	LD	E,#3F
	LD	BC,#8890
	PUSH	HL
	CALL	ScrDIRDnUp
	POP	DE
	LD	HL,WorkBuffer+#200
	LD	BC,#24C7
	CALL	PrintName
	POP	BC
	LD	A,B
	OUT	(PAGE1),A
	LD	A,C
	OUT	(YPORT),A
	POP	IY
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	INC	HL
	LD	(IY+PanelFFl),L
	LD	(IY+PanelFFh),H
	CALL	SetInvert
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	PrnVScrBar
	RET 
;На вход:
;	 HL - X	позиция
;	 D  - Y	откуда
;	 Е  - Y	куда
;	 BC - длина Y,X
ScrDIRDnUp
	SRL	H
	RR	L
	SET	6,H
	LD	A,B
	LD	(ScrlLen+1),A
	DI 
	LD	B,C
	LD	D,D
ScrlLen	LD	A,#00
	LD	B,B
ScRect1	LD	A,D
	OUT	(YPORT),A
	LD	A,A
	LD	A,(HL)
	LD	B,B
	LD	A,E
	OUT	(YPORT),A
	LD	A,A
	LD	(HL),A
	LD	B,B
	INC	HL
	DJNZ	ScRect1
	EI 
	RET 
;[]===========================================================[]
CursLeft
	BIT	1,(IY+ViewFlg)
	RET	NZ
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	LD	L,(IY+PanelCFl)
	LD	H,(IY+PanelCFh)
	LD	A,H
	OR	L
	JP	Z,PageUp
	LD	DE,#0011
	SBC	HL,DE
	JR	NC,CursLRex
	LD	HL,#0000
	JR	CursLRex
;
CursRight
	BIT	1,(IY+ViewFlg)
	RET	NZ
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	LD	L,(IY+PanelCFl)
	LD	H,(IY+PanelCFh)
	LD	E,(IY+PanelFPl)
	LD	D,(IY+PanelFPh)
	DEC	DE
	OR	A
	PUSH	HL
	SBC	HL,DE
	POP	HL
	JP	Z,PageDown
	LD	DE,#0011
	ADD	HL,DE
	BIT	0,(IY+ViewFlg)
	JR	NZ,$+5
	LD	DE,#0032
	EX	DE,HL
	SBC	HL,DE
	JR	NC,CursRg1
	LD	E,(IY+PanelFPl)
	LD	D,(IY+PanelFPh)
	DEC	DE
CursRg1	EX	DE,HL
	PUSH	HL
	LD	E,(IY+PanelFFl)
	LD	D,(IY+PanelFFh)
	ADD	HL,DE
	LD	C,(IY+PanelEFl)
	LD	B,(IY+PanelEFh)
	OR	A
	SBC	HL,BC
	POP	HL
	JR	C,CursLRex
	LD	L,C
	LD	H,B
	OR	A
	SBC	HL,DE
	DEC	HL
	PUSH	HL
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	OR	A
	SBC	HL,DE
	POP	HL
	RET	Z
CursLRex
	PUSH	HL
	CALL	ResInvert
	POP	HL
	LD	(IY+PanelCFl),L
	LD	(IY+PanelCFh),H
	CALL	SetInvert
	CALL	PrnFileInfo
	RET 
;[]===========================================================[]
PageUp
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	A,H
	OR	L
	JP	Z,Home
	PUSH	HL
	CALL	ResInvert
	POP	HL
	LD	E,(IY+PanelFPl)
	LD	D,(IY+PanelFPh)
	OR	A
	SBC	HL,DE
	JR	NC,$+5
	LD	HL,#0000
	LD	(IY+PanelFFl),L
	LD	(IY+PanelFFh),H
	JR	PageUDex
;
PageDown
	LD	C,(IY+PanelEFl)
	LD	B,(IY+PanelEFh)
	LD	A,B
	OR	C
	RET	Z
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelFPl)
	LD	D,(IY+PanelFPh)
	ADD	HL,DE
	OR	A
	SBC	HL,BC
	JP	NC,End
	PUSH	HL
	PUSH	BC
	CALL	ResInvert
	POP	BC
	POP	HL
	ADD	HL,BC
	LD	(IY+PanelFFl),L
	LD	(IY+PanelFFh),H
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	ADD	HL,DE
	OR	A
	SBC	HL,BC
	JR	C,PageUDex
	LD	L,C
	LD	H,B
	LD	E,(IY+PanelFFl)
	LD	D,(IY+PanelFFh)
	OR	A
	SBC	HL,DE
	DEC	HL
	LD	(IY+PanelCFl),L
	LD	(IY+PanelCFh),H
PageUDex
	CALL	PrintDIR
	CALL	SetInvert
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	LD	A,(IY+ViewFlg)
	AND	#03
	PUSH	AF
	CALL	Z,PrnHScrBar
	POP	AF
	CALL	NZ,PrnVScrBar
	LD	B,#07
PgUDext	PUSH	BC
	LD	C,#03
	RST	#30
	POP	BC
	BIT	0,A
	RET	Z
	HALT 
	DJNZ	PgUDext
	RET 
;[]===========================================================[]
Home
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	LD	A,(IY+PanelFFl)
	OR	(IY+PanelFFh)
	JR	NZ,Home1
	LD	A,(IY+PanelCFl)
	OR	(IY+PanelCFh)
	RET	Z
	CALL	ResInvert
	SUB	A
	LD	(IY+PanelCFl),A
	LD	(IY+PanelCFh),A
	CALL	SetInvert
	CALL	PrnFileInfo
	RET 
Home1
	CALL	ResInvert
	SUB	A
	LD	(IY+PanelFFl),A
	LD	(IY+PanelFFh),A
	LD	(IY+PanelCFl),A
	LD	(IY+PanelCFh),A
	JR	PageUDex
;
End
	LD	C,(IY+PanelEFl)
	LD	B,(IY+PanelEFh)
	LD	A,B
	OR	C
	RET	Z
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	ADD	HL,DE
	INC	HL
	OR	A
	SBC	HL,BC
	RET	Z
	PUSH	BC
	CALL	ResInvert
	POP	BC
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	BIT	0,(IY+ViewFlg)
	LD	E,(IY+PanelFPl)
	LD	D,(IY+PanelFPh)
	ADD	HL,DE
	INC	HL
	OR	A
	SBC	HL,BC
	JR	Z,End1
	JR	C,End1
	LD	L,(IY+PanelEFl)
	LD	H,(IY+PanelEFh)
	LD	E,(IY+PanelFFl)
	LD	D,(IY+PanelFFh)
	OR	A
	SBC	HL,DE
	DEC	HL
	LD	(IY+PanelCFl),L
	LD	(IY+PanelCFh),H
	CALL	SetInvert
	CALL	PrnFileInfo
	RET 
End1	LD	L,C
	LD	H,B
	OR	A
	SBC	HL,DE
	LD	(IY+PanelFFl),L
	LD	(IY+PanelFFh),H
	BIT	0,(IY+ViewFlg)
	LD	L,(IY+PanelFPl)
	LD	H,(IY+PanelFPh)
	DEC	HL
	LD	(IY+PanelCFl),L
	LD	(IY+PanelCFh),H
	JP	PageUDex
;[]==========================================================[]
NewFile
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	LD	A,(IY+ViewFlg)
	AND	#03
	LD	A,#00
	JR	NZ,NewFile1
	BIT	0,(IY+PanelFlg)
	LD	BC,#0068
	JR	Z,$+5
	LD	BC,#01A8
	OR	A
	SBC	HL,BC
	JR	C,NewFile1
	ADD	HL,BC
	BIT	0,(IY+PanelFlg)
	LD	BC,#0070
	JR	Z,$+5
	LD	BC,#01B0
	SBC	HL,BC
	RET	C
	ADD	HL,BC
	BIT	0,(IY+PanelFlg)
	LD	BC,#00D0
	JR	Z,$+5
	LD	BC,#0210
	SBC	HL,BC
	LD	A,#11
	JR	C,NewFile1
	ADD	HL,BC
	BIT	0,(IY+PanelFlg)
	LD	BC,#00D8
	JR	Z,$+5
	LD	BC,#0218
	SBC	HL,BC
	RET	C
	ADD	HL,BC
	BIT	0,(IY+PanelFlg)
	LD	BC,#0138
	JR	Z,$+5
	LD	BC,#0278
	SBC	HL,BC
	RET	NC
	LD	A,#22
NewFile1
	LD	HL,#003F
	OR	A
	EX	DE,HL
	SBC	HL,DE
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	LD	C,A
	LD	B,#00
	ADD	HL,BC
	LD	C,(IY+PanelCFl)
	LD	B,(IY+PanelCFh)
	OR	A
	SBC	HL,BC
	JP	Z,OpenFile
	ADD	HL,BC
	LD	E,(IY+PanelFFl)
	LD	D,(IY+PanelFFh)
	ADD	HL,DE
	LD	C,(IY+PanelEFl)
	LD	B,(IY+PanelEFh)
	OR	A
	SBC	HL,BC
	RET	NC
	ADD	HL,BC
	OR	A
	SBC	HL,DE
	PUSH	HL
	CALL	ResInvert
	POP	HL
	LD	(IY+PanelCFl),L
	LD	(IY+PanelCFh),H
	CALL	SetInvert
	CALL	PrnFileInfo
	CALL	ResFire
	RET 
;[]==========================================================[]
OpenFile
	BIT	1,(IY+ViewFlg)
	JP	NZ,TestTreeBeg
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	IN	A,(PAGE1)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE1),A
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	ADD	HL,DE
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	E,L
	LD	D,H
	ADD	HL,HL
	ADD	HL,DE
	SET	6,H
	LD	DE,WorkBuffer
	LD	BC,#000E
	PUSH	HL
	ADD	HL,BC
	LDI 
	POP	HL
	INC	HL
	CALL	MakeDOSname
	POP	AF
	OUT	(PAGE1),A
	LD	HL,WorkBuffer
	BIT	4,(HL)
	INC	HL
	JP	Z,RunEXEfile
	LD	A,(HL)
	CP	"."
	JR	NZ,OpenF2
	PUSH	HL
	PUSH	IY
	POP	HL
	LD	DE,BegPath
	ADD	HL,DE
	SUB	A
	INC	HL
	CP	(HL)
	JR	NZ,$-2
	LD	A,"\\"
	DEC	HL
	CP	(HL)
	JR	Z,OpenF1
	DEC	HL
	CP	(HL)
	JR	NZ,$-2
	INC	HL
	SUB	A
	LD	DE,PrevDIR
	LDI 
	CP	(HL)
	JR	NZ,$-3
	LD	(DE),A
	LD	A,"."
OpenF1	POP	HL
OpenF2	PUSH	AF
	PUSH	HL
	CALL	ResInvert
	POP	HL
	CALL	SetClock
	LD	C,#1D
	PUSH	IY
	RST	#10
	POP	IY
	CALL	C,DOSError
	CALL	ReadDIR
	PUSH	IY
	LD	C,#02
	PUSH	IY
	RST	#10
	POP	HL
	LD	DE,BegPath
	ADD	HL,DE
	ADD	A,"A"
	LD	(HL),A
	INC	HL
	LD	(HL),":"
	INC	HL
	LD	C,#1E
	RST	#10
	POP	IY
	CALL	PrintPath
	BIT	7,(IY+PanelFlg)
	CALL	NZ,PrintDOSPath
	POP	AF
	CP	"."
	CALL	Z,FindPrevDIR
	CALL	PrintDIR
	CALL	SetInvert
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	InitScrBar
	LD	A,(IY+ViewFlg)
	AND	#03
	PUSH	AF
	CALL	Z,PrnHScrBar
	POP	AF
	CALL	NZ,PrnVScrBar
	CALL	SetMouse
	LD	A,(TreeFlag)
	OR	A
	JP	Z,ResFire
	PUSH	IY
	BIT	0,(IY+PanelFlg)
	LD	IY,LeftPanel
	LD	HL,RightPanel
	JR	NZ,$+9
	LD	IY,RightPanel
	LD	HL,LeftPanel
	LD	DE,BegPath
	ADD	HL,DE
	INC	HL
	INC	HL
	CALL	FindTreeDIR
	CALL	PrintDIR
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	PrnVScrBar
	POP	IY
	RET 
;[]==========================================================[]
ChPanel
	CALL	ResInvert
	LD	A,(LeftPanel)
	XOR	#80
	LD	(LeftPanel),A
	LD	A,(RightPanel)
	XOR	#80
	LD	(RightPanel),A
	CALL	PrintPath
	BIT	1,(IY+ViewFlg)
	JR	Z,ChPan1
	IN	A,(PAGE1)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE1),A
	LD	A,#C0
	OUT	(YPORT),A
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	ADD	HL,DE
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	SET	6,H
	INC	HL
	SET	1,(HL)
	POP	AF
	OUT	(PAGE1),A
	CALL	PrintDIR
ChPan1	LD	IY,LeftPanel
	BIT	7,(IY+PanelFlg)
	JR	NZ,$+6
	LD	IY,RightPanel
	CALL	PrintPath
	CALL	PrintDOSPath
	BIT	1,(IY+ViewFlg)
	JR	Z,ChPan2
	IN	A,(PAGE1)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE1),A
	LD	A,#C0
	OUT	(YPORT),A
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	ADD	HL,DE
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	SET	6,H
	INC	HL
	RES	1,(HL)
	POP	AF
	OUT	(PAGE1),A
	CALL	PrintDIR
ChPan2	CALL	SetInvert
	PUSH	IY
	POP	HL
	LD	DE,BegPath
	ADD	HL,DE
	LD	C,#1D
	PUSH	IY
	RST	#10
	POP	IY
	RET	NC
	CALL	DOSError
	JP	BegDIRECTORY
;[]==========================================================[]
ChangeDriveL
	LD	IX,LeftPanel
	JR	ChangeDrive
ChangeDriveR
	LD	IX,RightPanel
ChangeDrive
	PUSH	IY
	PUSH	IX
	POP	IY
	LD	C,(IY+PanelXl)
	LD	B,(IY+PanelXh)
	INC	BC
	INC	BC
	OR	A
	SBC	HL,BC
	LD	BC,#001C
	LD	A,#FF
	INC	A
	SBC	HL,BC
	JR	NC,$-3
	ADD	A,"A"
	PUSH	IY
	POP	HL
	LD	DE,BegPath
	ADD	HL,DE
	LD	(HL),D
	LD	HL,NewDrive
	LD	(HL),A
	CALL	NewDIRECTORY
	BIT	7,(IY+PanelFlg)
	POP	IY
	RET	NZ
	PUSH	IY
	POP	HL
	LD	DE,BegPath
	ADD	HL,DE
	LD	C,#1D
	PUSH	IY
	RST	#10
	POP	IY
	RET	NC
	CALL	DOSError
	JP	BegDIRECTORY
NewDrive
	DEFB	" :\\",0
;[]==========================================================[]
ReplacePanels
	LD	IX,LeftPanel
	SET	0,(IX+PanelFlg)
	LD	L,(IX+PanelXl)
	LD	H,(IX+PanelXh)
	LD	IX,RightPanel
	RES	0,(IX+PanelFlg)
	LD	E,(IX+PanelXl)
	LD	D,(IX+PanelXh)
	LD	(IX+PanelXl),L
	LD	(IX+PanelXh),H
	LD	IX,LeftPanel
	LD	(IX+PanelXl),E
	LD	(IX+PanelXh),D
	LD	HL,DIRpage1
	LD	DE,DIRpage2
	LD	A,(DE)
	LDI 
	DEC	HL
	LD	(HL),A
	LD	HL,LeftPanel
	LD	DE,RightPanel
	LD	BC,BegPath+#100
ReplPan	LD	A,(DE)
	LDI 
	DEC	HL
	LD	(HL),A
	INC	HL
	JP	PE,ReplPan
	LD	A,#01
	CALL	InitPanels
	RET 
;[]==========================================================[]
ShowDOSscreen
	CALL	ResVMode
ShowDSlp
	LD	C,#31
	RST	#10
	JR	NZ,ShowDSexit
	LD	C,#03
	RST	#30
	OR	A
	JR	Z,ShowDSlp
ShowDSexit
	LD	BC,#0050
	LD	A,#82
	RST	#10
	CALL	ResFire
	RET 



;[]==========================================================[]
RunEXEfile
	LD	IX,fn_ext
	LD	DE,PrevFile
	PUSH	DE
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	LD	(DE),A
	POP	DE
	LD	L,E
	LD	H,D
	LD	A,"."
	INC	HL
	CP	(HL)
	JR	NZ,$-2
	INC	HL
	LD	A,(HL)
	INC	HL
	RES	5,A
	CP	"F"
	JP	Z,RunFLXfile
	CP	"T"
	JP	Z,RunTRDfile
	CP	"E"
	JP	NZ,TestEXT
	LD	A,(HL)
	INC	HL
	RES	5,A
	CP	"X"
	JP	NZ,TestEXT
	LD	A,(HL)
	RES	5,A
	CP	"E"
	JP	NZ,TestEXT
	PUSH	DE
	CALL	ResDrivers
	SUB	A
	CALL	ClearScreen
	CALL	ResVModeE
	POP	HL
	LD	BC,#0040
	RST	#10
	PUSH	AF
	SUB	A
	OUT	(BORDER),A
	LD	A,#C0
	OUT	(YPORT),A
	CALL	InitVMode
	CALL	InitDrivers
	CALL	InitScreen
	CALL	ClrDOSline
	LD	A,#02
	CALL	InitPanels
	POP	AF
	CALL	C,DOSError
	RET 
;[]----------------------------------------------------------[]
RunFLXfile
	LD	A,(HL)
	INC	HL
	RES	5,A
	CP	"L"
	JP	NZ,TestEXT
	LD	A,(HL)
	RES	5,A
	CP	"X"
	JP	NZ,TestEXT
	EX	DE,HL
	LD	DE,WorkBuffer
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	LD	(DE),A
	CALL	RunFLEX
	CALL	C,DOSError
	RET 
;[]----------------------------------------------------------[]
RunTRDfile
	LD	A,(HL)
	INC	HL
	RES	5,A
	CP	"R"
	JP	NZ,TestEXT
	LD	A,(HL)
	RES	5,A
	CP	"D"
	JP	NZ,TestEXT
	EX	DE,HL
	PUSH	IY
	CALL	LoadTRD
	POP	IY
	RET	C
	LD	C,#CA	;Clear RAMdisk Indef
	SUB	A
	RST	#08
	LD	C,#C3
	LD	A,B
	CALL	NC,#0008
	LD	A,(TRDIndef)
	LD	B,A
	LD	C,#C9
	SUB	A
	RST	#08
	LD	BC,#00CB
	SUB	A
	RST	#08
	LD	A,#05
	OUT	(PAGE1),A
	LD	HL,TRDResident
	LD	DE,#6000
	LD	BC,TRDResidentE-TRDResident
	PUSH	DE
	LDIR 
	RET 
TRDResident
	DI 
	LD	SP,#BFFF
	LD	A,#02
	OUT	(PAGE2),A
	SUB	A
	OUT	(YPORT),A
	OUT	(#A9),A
	OUT	(#C9),A
	LD	BC,#1FFD
	OUT	(C),A
	OUT	(PAGE0),A
	OUT	(PAGE3),A
	LD	BC,#7FFD
	LD	A,#10
	OUT	(C),A
	LD	C,#F0
	CALL	#3D14
	LD	C,#F2
	CALL	#3D14
	LD	BC,#0080
	LD	E,#01
	CALL	#3D14
	LD	BC,#02A6
	SUB	A
	LD	E,A
	CALL	#3D14
	LD	HL,#0000
	PUSH	HL
	JP	#3D2F
TRDResidentE

TRDfile=WorkBuffer+#100
LoadTRD
	CALL	SetClock
	LD	DE,TRDfile
	LD	BC,#0119
	LD	A,#37
	RST	#10
	PUSH	AF
	CALL	C,DOSError
	POP	AF
	RET	C
	LD	HL,TRDfile+33
	LD	A,(HL)
LoadTR0	CALL	CorrBigChar
	LD	(HL),A
	INC	HL
	LD	A,(HL)
	OR	A
	JR	NZ,LoadTR0
	LD	IX,TRDfile
	LD	H,(IX+28)
	LD	A,(IX+29)
	LD	E,(IX+30)
	LD	D,(IX+31)
	LD	L,#00
	SLA	A
	RL	E
	RL	D
	RL	L
	SLA	A
	RL	E
	RL	D
	RL	L
	OR	H
	LD	H,#00
	EX	DE,HL
	JR	Z,$+3
	INC	HL
	LD	A,H
	OR	L
	JR	NZ,LoadTR1
	INC	DE
LoadTR1	LD	A,D
	OR	E
	LD	A,#1E
	PUSH	AF
	CALL	NZ,DOSError	;!!!!!!!!!!!! Нет памяти
	POP	AF
	SCF 
	RET	NZ
	LD	C,#3C
	PUSH	HL
	RST	#10
	POP	DE
	LD	L,C
	LD	H,B
	OR	A
	SBC	HL,DE
	LD	A,#1E
	PUSH	DE
	PUSH	AF
	CALL	C,DOSError	;!!!!!!!!!!!! Нет памяти
	POP	AF
	POP	DE
	RET	C
	LD	IX,ProcessTRD
	LD	(IX+ProcMAXl1),E
	LD	(IX+ProcMAXh1),D
	SUB	A
	LD	(IX+ProcMAXl2),A
	LD	(IX+ProcMAXh2),A
	PUSH	DE
	CALL	InitProcess
	POP	DE
	LD	B,E
	LD	C,#3D
	RST	#10
	LD	(TRDIndef),A
	LD	HL,PagesList
	LD	C,#C5
	RST	#08
	CALL	MakeWindow
	DEFB	#01
	DEFW	#00A0,#0058
	DEFW	#0140,#0030
	DEFB	#02	;Head place
	DEFW	#0004,#0002
	DEFW	#0138,#000A
	DEFB	#00
	DEFB	#01	;Text Line
	DEFW	#007C,#0003
	DEFB	#0F
	DEFB	"Run TRD image",0
	DEFB	#01	;Text Line
	DEFW	#0008,#0010
	DEFB	#80
	DEFB	"Reading:",0
	DEFB	#03	;Углубление
	DEFW	#0010,#001C
	DEFW	#0120,#000C
	DEFB	#02	;Head place
	DEFW	#0012,#001D
	DEFW	#011C,#000A
	DEFB	#0F
	DEFB	#00
	LD	C,#02
	RST	#10
	LD	HL,WorkBuffer
	ADD	A,"A"
	LD	(HL),A
	INC	HL
	LD	(HL),":"
	INC	HL
	LD	C,#1E
	PUSH	HL
	RST	#10
	POP	HL
	SUB	A
	INC	HL
	CP	(HL)
	JR	NZ,$-2
	DEC	HL
	LD	A,"\\"
	CP	(HL)
	INC	HL
	JR	Z,$+4
	LD	(HL),A
	INC	HL
	EX	DE,HL
	LD	HL,TRDfile+33
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	LD	(DE),A
	LD	IX,#0100
	LD	HL,WorkBuffer
	LD	DE,#00D8
	LD	BC,#0068
	LD	A,#80
	CALL	PrnRangPathL

	LD	HL,TRDfile+33
	LD	A,#01
	LD	C,#11
	RST	#10
	JR	NC,LoadTRn
	LD	A,(TRDIndef)
	LD	C,#3E
	RST	#10
	SCF 
	JP	LoadTExit

LoadTRn	LD	(FHandleTR),A
	LD	IX,TRDfile
	LD	L,(IX+28)
	LD	H,(IX+29)
	LD	(ReadTLen),HL
	LD	L,(IX+30)
	LD	H,(IX+31)
	LD	(ReadTLen+2),HL
	LD	A,#C0
	OUT	(YPORT),A

	IN	A,(PAGE1)
	PUSH	AF
	LD	HL,PagesList
	LD	A,(HL)
ReadTR1	INC	HL
	PUSH	HL
	OUT	(PAGE1),A
	LD	C,#31
	RST	#10
	LD	HL,#011B
	OR	A
	SBC	HL,DE
	JP	Z,TRDabort
	LD	HL,(ReadTLen)
	LD	DE,(ReadTLen+2)
	LD	BC,#4000
	OR	A
	SBC	HL,BC
	LD	B,#00
	EX	DE,HL
	SBC	HL,BC
	EX	DE,HL
	JR	C,ReadTEnd
	LD	(ReadTLen),HL
	LD	(ReadTLen+2),DE
	LD	HL,#4000
	LD	DE,#4000
	LD	A,(FHandleTR)
	LD	C,#13
	RST	#10
	CALL	NextProcessTR
	POP	HL
	LD	A,(HL)
	CP	#FF
	JR	NZ,ReadTR1
	POP	AF
	OUT	(PAGE1),A
	JR	ReadTExit
ReadTEnd
	LD	HL,#4000
	LD	DE,(ReadTLen)
	LD	A,D
	OR	E
	JR	Z,ReadTRe
	LD	A,(FHandleTR)
	LD	C,#13
	RST	#10
	CALL	NextProcessTR
ReadTRe	POP	HL
	POP	AF
	OUT	(PAGE1),A
ReadTExit
	LD	A,(FHandleTR)
	LD	C,#12
	RST	#10
	OR	A
LoadTExit
	HALT 
	HALT 
	CALL	MakeWindow
	DEFB	#7F
	DEFB	#00
	PUSH	AF
	CALL	SetMouse
	POP	AF
	RET 
TRDabort
	POP	HL
	POP	AF
	OUT	(PAGE1),A
	LD	A,(FHandleTR)
	LD	C,#12
	RST	#10
	LD	A,(TRDIndef)
	LD	C,#3E
	RST	#10
	SCF 
	JR	LoadTExit
NextProcessTR
	LD	IX,ProcessTRD
	LD	L,(IX+ProcCURl1)
	LD	H,(IX+ProcCURh1)
	INC	HL
	LD	(IX+ProcCURl1),L
	LD	(IX+ProcCURh1),H
	LD	A,H
	OR	L
	JR	NZ,NextTR1
	LD	L,(IX+ProcCURl2)
	LD	H,(IX+ProcCURh2)
	INC	HL
	LD	(IX+ProcCURl2),L
	LD	(IX+ProcCURh2),H
NextTR1	CALL	PrnProcess
	RET 
ProcessTRD
	DEFW	#00B2
	DEFW	#0075
	DEFW	#011C
	DEFW	#0000
	DEFW	#0000
	DEFW	#0000
	DEFW	#0000
	DEFW	#0000
	DEFW	#0000
	DEFB	#4F
FHandleTR
	DEFB	#00
ReadTLen
	DEFS	4,0
TRDIndef
	DEFB	#00
;[]-----------------------------------------------------------[]
TestEXT
	PUSH	IX
	LD	LX,E
	LD	HX,D
	EX	DE,HL
	LD	A,"."
	INC	HL
	CP	(HL)
	JR	NZ,$-2
	INC	HL
	EX	DE,HL
	POP	HL
	IN	A,(PAGE1)
	PUSH	AF
	LD	A,(HelpPg)
	OUT	(PAGE1),A
TestEXT1
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	INC	HL
	LD	A,B
	OR	C
	JR	Z,TestEND
	PUSH	DE
	EX	DE,HL
	LD	A,(DE)
	INC	DE
	CP	"?"
	JR	Z,$+5
	CP	(HL)
	JR	NZ,TestEXTn
	INC	HL
	LD	A,(DE)
	INC	DE
	CP	"?"
	JR	Z,$+5
	CP	(HL)
	JR	NZ,TestEXTn
	INC	HL
	LD	A,(DE)
	INC	DE
	CP	"?"
	JR	Z,TestEXTn
	CP	(HL)
TestEXTn
	EX	DE,HL
	POP	DE
	JR	Z,TestEXTok
	LD	L,C
	LD	H,B
	JR	TestEXT1
TestEND
	POP	AF
	OUT	(PAGE1),A
	SCF 
	RET 
TestEXTok
	LD	DE,WorkBuffer
	LD	C,#00
TstEXT0	LD	A,C
	LDI 
	LD	C,A
	LD	A,(HL)
	OR	A
	JR	Z,TstEXT2
	CP	#20
	JR	Z,TstEXT1
	CP	"."
	JR	NZ,TstEXT0
	LD	(DE),A
	INC	HL
	INC	DE
	LD	A,(HL)
	LD	(DE),A
	INC	HL
	INC	DE
	CP	#20
	JR	Z,TstEXT1
	RES	5,A
	CP	"F"
	JR	NZ,$+4
	SET	0,C
	LD	A,(HL)
	LD	(DE),A
	INC	HL
	INC	DE
	CP	#20
	JR	Z,TstEXT1
	RES	5,A
	CP	"L"
	JR	NZ,$+4
	SET	1,C
	LD	A,(HL)
	LD	(DE),A
	INC	HL
	INC	DE
	CP	#20
	JR	Z,TstEXT1
	RES	5,A
	CP	"X"
	JR	NZ,TstEXT1
	SET	2,C
TstEXT1	LD	A,(HL)
	CP	"!"
	JR	NZ,TstEX11
	INC	HL
	LD	A,(HL)
	CP	"."
	JP	Z,EName
	CP	":"
	JP	Z,EDrive
	CP	"\\"
	JP	Z,EPath
	DEC	HL
TstEX11	LD	(DE),A
	INC	HL
	INC	DE
	OR	A
	JR	NZ,TstEXT1
TstEXT2	LD	(DE),A
	POP	AF
	OUT	(PAGE1),A
	LD	HL,WorkBuffer
	LD	A,C
	CP	#07
	JP	Z,RunFLEX
	LD	DE,WorkBuffer+#100
	LD	BC,#0119
	LD	A,#37
	PUSH	IY
	RST	#10
	POP	IY
	JP	C,RestoreDIR
	CALL	ResDrivers
	SUB	A
	CALL	ClearScreen
	CALL	ResVModeE
	LD	HL,WorkBuffer
	LD	BC,#0040
	RST	#10
	PUSH	AF
	SUB	A
	OUT	(BORDER),A
	LD	A,#C0
	OUT	(YPORT),A
	CALL	InitVMode
	CALL	InitDrivers
	CALL	InitScreen
	CALL	ClrDOSline
	LD	A,#02
	CALL	InitPanels
	POP	AF
	CALL	C,DOSError
	OR	A
	RET 
RestoreDIR
	PUSH	AF
	PUSH	IY
	POP	HL
	LD	BC,BegPath
	ADD	HL,BC
	LD	C,#1D
	PUSH	IY
	RST	#10
	POP	IY
	POP	AF
	RET 
EName
	INC	HL
	LD	A,(HL)
	DEC	HL
	CP	"!"
	JR	NZ,TstEX11
	INC	HL
	PUSH	HL
	PUSH	BC
	LD	HL,PrevFile
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	POP	BC
	POP	HL
	INC	HL
	JP	TstEXT1
EDrive
	LD	A,(IY+BegPath)
	LD	(DE),A
	INC	DE
	LD	A,":"
	LD	(DE),A
	INC	DE
	INC	HL
	JP	TstEXT1
EPath
	PUSH	HL
	PUSH	BC
	PUSH	IY
	POP	HL
	LD	BC,BegPath
	ADD	HL,BC
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	DEC	HL
	LD	A,"\\"
	CP	(HL)
	JR	Z,$+4
	LD	(DE),A
	INC	DE
	POP	BC
	POP	HL
	INC	HL
	JP	TstEXT1
RunFLEX
	LD	HL,RestoreDIR
	PUSH	HL
	LD	HL,WorkBuffer
	LD	A,#21
	INC	HL
	CP	(HL)
	JR	C,$-2
	SUB	A
	LD	(HL),A
	INC	HL
	PUSH	HL
	LD	HL,WorkBuffer
	LD	A,#01
	LD	C,#11
	PUSH	IY
	RST	#10
	POP	IY
	POP	HL
	RET	C
	LD	(FLXHandle),A
	PUSH	HL
	LD	IX,#0000
	LD	HL,#0000
	LD	BC,#0215
	PUSH	IY
	RST	#10
	POP	IY
	LD	A,HX
	AND	#C0
	OR	H
	OR	L
	POP	HL
	SCF 
	LD	A,#1E
	RET	NZ

	PUSH	IY
	PUSH	HL
	LD	A,#C0
	OUT	(YPORT),A
	LD	IX,#0000
	LD	HL,#0000
	LD	BC,#0015
	LD	A,(FLXHandle)
	RST	#10
	IN	A,(PAGE1)
	PUSH	AF
	LD	A,(WorkPage)
	OUT	(PAGE1),A
	LD	HL,#8100
	LD	DE,#0010
	LD	A,(FLXHandle)
	LD	C,#13
	PUSH	HL
	RST	#10
	POP	HL
	JR	C,RFlex1
	LD	A,(HL)
	INC	HL
	CP	"F"
	SCF 
	LD	A,#10
	JR	NZ,RFlex1
	LD	A,(HL)
	INC	HL
	CP	"L"
	SCF 
	LD	A,#10
	JR	NZ,RFlex1
	LD	A,(HL)
	INC	HL
	CP	"X"
	SCF 
	LD	A,#10
	JR	NZ,RFlex1
	LD	L,#08
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	INC	HL
	LD	(FLXexec+1),BC
	LD	A,(HL)
	INC	HL
	LD	(FLXmode+1),A
	RES	7,D
	SET	6,D
	LD	HL,#8000
	OR	A
	SBC	HL,DE
	EX	DE,HL
	LD	A,(FLXHandle)
	LD	C,#13
	RST	#10
RFlex1	EX	AF,AF'
	POP	AF
	OUT	(PAGE1),A
	EX	AF,AF'
	PUSH	AF
	LD	A,(FLXHandle)
	LD	C,#12
	RST	#10
	POP	AF
	POP	HL
	POP	IY
	RET	C
FLXexec	LD	DE,#0000
	SET	7,D
	SET	6,D
	LD	A,(WorkPage)
	LD	C,PAGE3
	PUSH	IY
	CALL	Resident
	POP	IY
	CCF 
	RET	NC
FLXmode	LD	A,#00
	OR	A
	RET	Z
	INC	SP
	INC	SP
	SUB	A
	OUT	(BORDER),A
	LD	A,#C0
	OUT	(YPORT),A
	CALL	InitScreen
	CALL	ClrDOSline
	LD	A,#02
	CALL	InitPanels
	OR	A
	RET 
FLXHandle
	DEFB	#00
;[]===========================================================[]
Help
	LD	DE,HelpR
	LD	A,(HelpPg)
	LD	C,PAGE1
	CALL	Resident
	RET 
;[]----------------------------------------------------------[]
ViewFileSH
	BIT	1,(IY+ViewFlg)
	RET	NZ
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	CALL	ResInvert
	LD	HL,SetInvert
	PUSH	HL
	CALL	MakeWindow
	DEFB	#01
	DEFW	#00C8,#0051
	DEFW	#00F0,#003E
	DEFB	#02	;Head place
	DEFW	#0004,#0002
	DEFW	#00E8,#000A
	DEFB	#00
	DEFB	#01	;Text Line
	DEFW	#006C,#0003
	DEFB	#0F
	DEFB	"View",0
	DEFB	#04	;UpRectan
	DEFW	#0028,#002A
	DEFW	#0048,#000E
	DEFB	#01	;Text Line
	DEFW	#0044,#002D
	DEFB	#80
	DEFB	"Ok",0
	DEFB	#04	;UpRectan
	DEFW	#0080,#002A
	DEFW	#0048,#000E
	DEFB	#01	;Text Line
	DEFW	#0094,#002D
	DEFB	#80
	DEFB	"Cancel",0
	DEFB	#01	;Text Line
	DEFW	#000C,#0019
	DEFB	#80
	DEFB	"View the file:",0
	DEFB	#03	;Углубление
	DEFW	#0056,#0016
	DEFW	#0086,#000C
	DEFB	#02	;Head place
	DEFW	#0058,#0017
	DEFW	#0082,#000A
	DEFB	#0F
	DEFB	#00
	LD	IX,ViewStr
	LD	HL,ViewEditTab
	CALL	InputLine
	CALL	MakeWindow
	DEFB	#7F
	DEFB	#00
	RET	C
	LD	A,(ViewLen)
	OR	A
	RET	Z
	LD	HL,ViewName
	LD	DE,PrevFile
	LD	B,A
ViewSH1	LD	A,(HL)
	CALL	CorrBigChar
	LD	(HL),A
	LD	(DE),A
	INC	HL
	INC	DE
	DJNZ	ViewSH1
	SUB	A
	LD	(DE),A
	POP	HL
	CALL	SetInvert
	JP	View
ViewStr
	DEFB	#0C,#00,#00,#00
ViewLen	DEFB	#00
	DEFW	#0122,#006A
	DEFW	#0068
	DEFB	#F0
ViewName DEFS	 #0D,#00
;-------------------------------------------
ViewFile
	SUB	A
	JR	StViewFile+2
;-------------------------------------------
StViewFile
	LD	A,#01
	LD	(VFlag+1),A
	BIT	1,(IY+ViewFlg)
	RET	NZ
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	IN	A,(PAGE1)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE1),A
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	ADD	HL,DE
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	E,L
	LD	D,H
	ADD	HL,HL
	ADD	HL,DE
	SET	6,H
	LD	DE,WorkBuffer
	LD	BC,#000E
	PUSH	HL
	ADD	HL,BC
	LDI 
	POP	HL
	INC	HL
	CALL	MakeDOSname
	POP	AF
	OUT	(PAGE1),A
	LD	HL,WorkBuffer
	BIT	4,(HL)
	RET	NZ
	INC	HL
	LD	DE,PrevFile
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	LD	(DE),A
VFlag	LD	A,#00
	OR	A
	JR	NZ,View1
View	LD	IX,fnview_ext
	LD	DE,PrevFile
	CALL	TestEXT
	RET	NC
View1	CALL	ResInvert
	LD	HL,SetInvert
	PUSH	HL
	PUSH	IY
	LD	HL,PrevFile
	LD	DE,#C000
	LD	A,(ViewPg)
	LD	C,PAGE3
	CALL	Resident
	POP	IY
	RET	C
	SUB	A
	OUT	(BORDER),A
	LD	A,#C0
	OUT	(YPORT),A
	CALL	InitScreen
	CALL	ClrDOSline
	LD	A,#02
	CALL	InitPanels
	POP	HL
	RET 
;[]----------------------------------------------------------[]
EditFileSH
	BIT	1,(IY+ViewFlg)
	RET	NZ
	CALL	ResInvert
	LD	HL,SetInvert
	PUSH	HL
	CALL	MakeWindow
	DEFB	#01
	DEFW	#00C8,#0051
	DEFW	#00F0,#003E
	DEFB	#02	;Head place
	DEFW	#0004,#0002
	DEFW	#00E8,#000A
	DEFB	#00
	DEFB	#01	;Text Line
	DEFW	#006E,#0003
	DEFB	#0F
	DEFB	"Edit",0
	DEFB	#04	;UpRectan
	DEFW	#0028,#002A
	DEFW	#0048,#000E
	DEFB	#01	;Text Line
	DEFW	#0044,#002D
	DEFB	#80
	DEFB	"Ok",0
	DEFB	#04	;UpRectan
	DEFW	#0080,#002A
	DEFW	#0048,#000E
	DEFB	#01	;Text Line
	DEFW	#0094,#002D
	DEFB	#80
	DEFB	"Cancel",0
	DEFB	#01	;Text Line
	DEFW	#000C,#0019
	DEFB	#80
	DEFB	"Edit the file:",0
	DEFB	#03	;Углубление
	DEFW	#0056,#0016
	DEFW	#0086,#000C
	DEFB	#02	;Head place
	DEFW	#0058,#0017
	DEFW	#0082,#000A
	DEFB	#0F
	DEFB	#00
	LD	IX,EditStr
	LD	HL,ViewEditTab
	CALL	InputLine
	CALL	MakeWindow
	DEFB	#7F
	DEFB	#00
	RET	C
	LD	A,(EditLen)
	OR	A
	RET	Z
	LD	HL,EditName
	LD	DE,PrevFile
	LD	B,A
EditSH1	LD	A,(HL)
	CALL	CorrBigChar
	LD	(HL),A
	LD	(DE),A
	INC	HL
	INC	DE
	DJNZ	EditSH1
	SUB	A
	LD	(DE),A
	POP	HL
	CALL	SetInvert
	JP	Edit
EditStr
	DEFB	#0C,#00,#00,#00
EditLen	DEFB	#00
	DEFW	#0122,#006A
	DEFW	#0068
	DEFB	#F0
EditName DEFS	 #0D,#00
;-------------------------------------------
EditFile
	SUB	A
	JR	StEditFile+2
;-------------------------------------------
StEditFile
	LD	A,#01
	LD	(EFlag+1),A
	BIT	1,(IY+ViewFlg)
	RET	NZ
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	IN	A,(PAGE1)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE1),A
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	ADD	HL,DE
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	E,L
	LD	D,H
	ADD	HL,HL
	ADD	HL,DE
	SET	6,H
	LD	DE,WorkBuffer
	LD	BC,#000E
	PUSH	HL
	ADD	HL,BC
	LDI 
	POP	HL
	INC	HL
	CALL	MakeDOSname
	POP	AF
	OUT	(PAGE1),A
	LD	HL,WorkBuffer
	BIT	4,(HL)
	RET	NZ
	INC	HL
	LD	DE,PrevFile
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	LD	(DE),A
EFlag	LD	A,#00
	OR	A
	JR	NZ,Edit1
Edit	LD	IX,fnedit_ext
	LD	DE,PrevFile
	CALL	TestEXT
	RET	NC
Edit1	CALL	ResInvert
	LD	HL,SetInvert
	PUSH	HL
	PUSH	IY
	LD	HL,PrevFile
	LD	DE,#C000
	LD	A,(EditPg)
	LD	C,PAGE3
	CALL	Resident
	POP	IY
	RET	C
	SUB	A
	OUT	(BORDER),A
	LD	A,#C0
	OUT	(YPORT),A
	CALL	InitScreen
	CALL	ClrDOSline
	LD	A,#02
	CALL	InitPanels
	POP	HL
	RET 
;[]----------------------------------------------------------[]
CopyFiles
	LD	DE,CopyFilesR
	LD	A,(FunctPg)
	LD	C,PAGE1
	CALL	Resident
	RET 
;[]----------------------------------------------------------[]
ReName
	LD	DE,ReNameR
	LD	A,(FunctPg)
	LD	C,PAGE1
	CALL	Resident
	RET 
;[]----------------------------------------------------------[]
MakeDIR
	LD	DE,MakeDIRR
	LD	A,(FunctPg)
	LD	C,PAGE1
	CALL	Resident
	RET 
;[]----------------------------------------------------------[]
DeleteFiles
	LD	DE,DeleteFilesR
	LD	A,(FunctPg)
	LD	C,PAGE1
	CALL	Resident
	RET 
;[]----------------------------------------------------------[]
Quit
	CALL	ResInvert
	LD	DE,QuitR
	LD	A,(FunctPg)
	LD	C,PAGE1
	CALL	Resident
	JP	C,SetInvert
	LD	HL,ComExit
	EX	(SP),HL
	RET 
;[]==========================================================[]
Setup
	LD	DE,SetupR
	LD	A,(FunctPg)
	LD	C,PAGE1
	CALL	Resident
	RET 
;[]----------------------------------------------------------[]
FileInfo
	CALL	ResInvert
	LD	HL,SetInvert
	PUSH	HL
	LD	DE,FileInfoR
	LD	A,(FunctPg)
	LD	C,PAGE1
	CALL	Resident
	RET 
;[]----------------------------------------------------------[]
PrintFile
	CALL	ResInvert
	LD	HL,SetInvert
	PUSH	HL
	LD	DE,PrintFileR
	LD	A,(FunctPg)
	LD	C,PAGE1
	CALL	Resident
	RET 
;[]----------------------------------------------------------[]
DiskInfo
	CALL	ResInvert
	LD	DE,DiskInfoR
	LD	A,(FunctPg)
	LD	C,PAGE1
	CALL	Resident
	RET 
;[]----------------------------------------------------------[]
SystemInfo
	LD	DE,SystemInfoR
	LD	A,(FunctPg)
	LD	C,PAGE1
	CALL	Resident
	RET 
;[]----------------------------------------------------------[]
Version
	LD	DE,VersionR
	LD	A,(FunctPg)
	LD	C,PAGE1
	CALL	Resident
	RET 
;[]----------------------------------------------------------[]
QSearch
	LD	DE,QSearchR
	LD	A,(FunctPg)
	LD	C,PAGE1
	CALL	Resident
	RET 


