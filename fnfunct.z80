
;[]==========================================================[]
CopyFilesR
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	BIT	1,(IY+ViewFlg)
	RET	NZ
	LD	A,#C0
	OUT	(YPORT),A
	LD	A,(IY+PanelMFl)
	OR	(IY+PanelMFh)
	JR	NZ,CopyMark
	IN	A,(PAGE3)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE3),A
	LD	IX,WorkBuffer
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	ADD	HL,DE
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	E,L
	LD	D,H
	ADD	HL,HL
	ADD	HL,DE
	LD	A,H
	OR	#C0
	LD	H,A
	LD	(AdrCopyFile),HL
	LD	DE,WorkBuffer
	LD	BC,#0018
	LDIR 
	POP	AF
	OUT	(PAGE3),A
	BIT	4,(IX+#0E)
	RET	NZ
	LD	HL,#0000
	LD	(ECopyFiles),HL
	LD	L,(IX+#0F)
	LD	H,(IX+#10)
	LD	(ECopyBytes),HL
	LD	E,(IX+#11)
	LD	D,(IX+#12)
	LD	(ECopyBytes+2),DE
	CALL	ConvLenToBank
	JR	CopyNxt
CopyMark
	LD	L,(IY+PanelMFl)
	LD	H,(IY+PanelMFh)
	LD	(ECopyFiles),HL
	LD	L,(IY+PanelMBl1)
	LD	H,(IY+PanelMBh1)
	LD	(ECopyBytes),HL
	LD	L,(IY+PanelMBl2)
	LD	H,(IY+PanelMBh2)
	LD	(ECopyBytes+2),HL
	IN	A,(PAGE3)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE3),A
	LD	HL,#C000-#18
	LD	BC,#0018
	ADD	HL,BC
	BIT	0,(HL)
	JR	Z,$-3
	LD	(AdrCopyFile),HL
	PUSH	HL
	POP	IX
	SUB	A
	LD	L,A
	LD	H,A
	LD	E,L
	LD	D,H
CopyLp0	BIT	0,(IX+#00)
	JR	Z,CopyNx2
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	L,(IX+#0F)
	LD	H,(IX+#10)
	LD	E,(IX+#11)
	LD	D,(IX+#12)
	CALL	ConvLenToBank
	LD	C,L
	LD	B,H
	POP	HL
	ADD	HL,BC
	LD	C,E
	LD	B,D
	POP	DE
	EX	DE,HL
	ADC	HL,BC
	EX	DE,HL
	POP	BC
CopyNx2	ADD	IX,BC
	LD	A,(IX+#01)
	OR	A
	JR	NZ,CopyLp0
	POP	AF
	OUT	(PAGE3),A
CopyNxt	LD	IX,ProcessAll
	ADD	HL,HL
	EX	DE,HL
	ADC	HL,HL
	EX	DE,HL
	LD	(IX+ProcMAXl1),L
	LD	(IX+ProcMAXh1),H
	LD	(IX+ProcMAXl2),E
	LD	(IX+ProcMAXh2),D
	CALL	InitProcess
	CALL	ResInvert
	LD	HL,SetInvert
	PUSH	HL
	CALL	MakeWindow
	DEFB	#01
	DEFW	#0060,#0051
	DEFW	#01C0,#003E
	DEFB	#02	;Head place
	DEFW	#0004,#0002
	DEFW	#01B8,#000A
	DEFB	#00
	DEFB	#01	;Text Line
	DEFW	#00D2,#0003
	DEFB	#0F
	DEFB	"Copy",0
	DEFB	#04	;UpRectan
	DEFW	#0090,#002A
	DEFW	#0048,#000E
	DEFB	#01	;Text Line
	DEFW	#00AC,#002D
	DEFB	#80
	DEFB	"Ok",0
	DEFB	#04	;UpRectan
	DEFW	#00E8,#002A
	DEFW	#0048,#000E
	DEFB	#01	;Text Line
	DEFW	#00FC,#002D
	DEFB	#80
	DEFB	"Cancel",0
	DEFB	#01	;Text Line
	DEFW	#0016,#0019
	DEFB	#80
	DEFB	"Copy to:",0
	DEFB	#03	;Углубление
	DEFW	#0046,#0016
	DEFW	#014C,#000C
	DEFB	#02	;Head place
	DEFW	#0048,#0017
	DEFW	#0148,#000A
	DEFB	#0F
	DEFB	#00
	BIT	0,(IY+PanelFlg)
	LD	HL,LeftPanel
	JR	NZ,$+5
	LD	HL,RightPanel
	LD	DE,BegPath
	ADD	HL,DE
	LD	DE,CurPath
	SUB	A
	LD	C,A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	LD	(DE),A
	SUB	A
	SUB	C
	LD	(PathLen),A
	LD	IX,PathStr
	LD	HL,PathTab
	CALL	InputLine
	CALL	MakeWindow
	DEFB	#7F
	DEFB	#00
	RET	C
	LD	A,(PathLen)
	OR	A
	RET	Z
	LD	C,#3C
	PUSH	IY
	RST	#10
	POP	IY
	LD	(FreeBanks),BC
	LD	A,B
	OR	C
	LD	A,#1E
	JP	Z,DOSError	;!!!!!!!!!!!! Нет памяти
	CALL	MakeWindow
	DEFB	#01
	DEFW	#00A0,#0051
	DEFW	#0140,#004E
	DEFB	#02	;Head place
	DEFW	#0004,#0002
	DEFW	#0138,#000A
	DEFB	#00
	DEFB	#01	;Text Line
	DEFW	#0094,#0003
	DEFB	#0F
	DEFB	"Copy",0
	DEFB	#01	;Text Line
	DEFW	#0008,#0010
	DEFB	#80
	DEFB	"From:",0
	DEFB	#01	;Text Line
	DEFW	#0016,#001A
	DEFB	#80
	DEFB	"to:",0
	DEFB	#03	;Углубление
	DEFW	#0010,#0026
	DEFW	#0120,#000C
	DEFB	#02	;Head place
	DEFW	#0012,#0027
	DEFW	#011C,#000A
	DEFB	#0F
	DEFB	#03	;Углубление
	DEFW	#0010,#0038
	DEFW	#0120,#000C
	DEFB	#02	;Head place
	DEFW	#0012,#0039
	DEFW	#011C,#000A
	DEFB	#0F
	DEFB	#00
	SUB	A
	LD	(OverWriteFlg),A
	LD	HL,LeftPanel
	BIT	0,(IY+PanelFlg)
	JR	Z,$+5
	LD	HL,RightPanel
	LD	BC,BegPath
	ADD	HL,BC
	LD	(CopyFrom),HL
	LD	HL,CurPath
	LD	(CopyTo),HL

	CALL	SetClock
	PUSH	IY
	IN	A,(PAGE3)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE3),A
CopyNextFile
	CALL	PrnFromTo
	LD	IX,(AdrCopyFile)
	LD	L,(IX+#0F)
	LD	H,(IX+#10)
	LD	E,(IX+#11)
	LD	D,(IX+#12)
	LD	(ReadLen),HL
	LD	(ReadLen+2),DE
	LD	(WriteLen),HL
	LD	(WriteLen+2),DE
	CALL	ConvLenToBank
	LD	(FileBnL+1),HL
	LD	(FileBnH+1),DE

	LD	IX,ProcessOne
	ADD	HL,HL
	EX	DE,HL
	ADC	HL,HL
	EX	DE,HL
	LD	(IX+ProcMAXl1),L
	LD	(IX+ProcMAXh1),H
	LD	(IX+ProcMAXl2),E
	LD	(IX+ProcMAXh2),D
	CALL	InitProcess
	CALL	PrnProcess

	LD	HL,(FreeBanks)
FileBnH	LD	DE,#0000
	LD	A,D
	OR	E
	JR	NZ,CopyLp1
FileBnL	LD	DE,#0000
	OR	A
	SBC	HL,DE
	JR	NC,$+4
	ADD	HL,DE
CopyLp1	EX	DE,HL
	LD	B,E
	LD	C,#3D
	RST	#10
	LD	(MemIndef),A
	LD	HL,PagesList
	LD	C,#C5
	RST	#08

	LD	HL,(CopyFrom)	;Открываем файл	источник
	LD	C,#1D
	RST	#10
	JP	C,CopyError1

	LD	HL,(AdrCopyFile)
	INC	HL
	LD	DE,WorkBuffer
	PUSH	DE
	CALL	MakeDOSname
	POP	HL
	LD	A,#01
	LD	C,#11
	RST	#10
	JP	C,CopyError1
	LD	(FHandle1),A

	LD	HL,(CopyTo)	;Открываем файл	приемник
	LD	C,#1D
	RST	#10
	JP	C,CopyError2
	LD	IX,(AdrCopyFile)
	LD	HL,(AdrCopyFile)
	INC	HL
	LD	DE,WorkBuffer
	PUSH	DE
	CALL	MakeDOSname
	POP	HL
	LD	A,(OverWriteFlg)
	OR	A
	LD	C,#0B
	JR	Z,$+4
	LD	C,#0A
	LD	A,(IX+#0E)
	RST	#10
	JR	NC,CopyLp2
	CP	#07
	JP	NZ,CopyError2
	CALL	OverWrite
CopyLp2	LD	(FHandle2),A

	LD	HL,(ReadLen)
	LD	A,H
	OR	L
	LD	HL,(ReadLen+2)
	OR	H
	OR	L
	JP	Z,CloseFiles

ReadFile
	IN	A,(PAGE3)
	PUSH	AF
	LD	HL,PagesList
	LD	A,(HL)
ReadLp1	INC	HL
	PUSH	HL
	OUT	(PAGE3),A
	LD	C,#31
	RST	#10
	LD	HL,#011B
	OR	A
	SBC	HL,DE
	JP	Z,CopyBreak
	LD	HL,(ReadLen)
	LD	DE,(ReadLen+2)
	LD	BC,#4000
	OR	A
	SBC	HL,BC
	LD	B,#00
	EX	DE,HL
	SBC	HL,BC
	EX	DE,HL
	JR	C,ReadEnd
	LD	(ReadLen),HL
	LD	(ReadLen+2),DE
	LD	HL,#C000
	LD	DE,#4000
	LD	A,(FHandle1)
	LD	C,#13
	RST	#10
	CALL	NextProcess
	POP	HL
	LD	A,(HL)
	CP	#FF
	JR	NZ,ReadLp1
	POP	AF
	OUT	(PAGE3),A
	JR	WriteFile
ReadEnd
	LD	HL,#C000
	LD	DE,(ReadLen)
	LD	A,D
	OR	E
	LD	A,(FHandle1)
	LD	C,#13
	PUSH	AF
	CALL	NZ,#0010
	POP	AF
	CALL	NZ,NextProcess
	POP	HL
	POP	AF
	OUT	(PAGE3),A

WriteFile
	IN	A,(PAGE3)
	PUSH	AF
	LD	HL,PagesList
	LD	A,(HL)
WriteL1	INC	HL
	PUSH	HL
	OUT	(PAGE3),A
	LD	C,#31
	RST	#10
	LD	HL,#011B
	OR	A
	SBC	HL,DE
	JP	Z,CopyBreak
	LD	HL,(WriteLen)
	LD	DE,(WriteLen+2)
	LD	BC,#4000
	OR	A
	SBC	HL,BC
	LD	B,#00
	EX	DE,HL
	SBC	HL,BC
	EX	DE,HL
	JR	C,WriteEnd
	LD	(WriteLen),HL
	LD	(WriteLen+2),DE
	LD	HL,#C000
	LD	DE,#4000
	LD	A,(FHandle2)
	LD	C,#14
	RST	#10
	CALL	NextProcess
	POP	HL
	LD	A,(HL)
	CP	#FF
	JR	NZ,WriteL1
	POP	AF
	OUT	(PAGE3),A
	LD	HL,(ReadLen)
	LD	A,H
	OR	L
	LD	HL,(ReadLen+2)
	OR	H
	OR	L
	JR	Z,CloseFiles
	JP	ReadFile
WriteEnd
	LD	HL,#C000
	LD	DE,(WriteLen)
	LD	A,D
	OR	E
	LD	A,(FHandle2)
	LD	C,#14
	PUSH	AF
	CALL	NZ,#0010
	POP	AF
	CALL	NZ,NextProcess
	POP	HL
	POP	AF
	OUT	(PAGE3),A

CloseFiles
	LD	A,(FHandle1)
	LD	C,#17
	RST	#10
	LD	A,(FHandle2)
	LD	C,#18
	RST	#10

	LD	A,(FHandle2)
	LD	C,#12
	RST	#10
CloseFile1
	LD	A,(FHandle1)
	LD	C,#12
	RST	#10
	LD	A,(MemIndef)
	LD	C,#3E
	RST	#10

	LD	IX,(AdrCopyFile)
	RES	0,(IX+#00)
	LD	HL,(ECopyBytes)
	LD	E,(IX+#0F)
	LD	D,(IX+#10)
	OR	A
	SBC	HL,DE
	LD	(ECopyBytes),HL
	LD	HL,(ECopyBytes+2)
	LD	E,(IX+#11)
	LD	D,(IX+#12)
	SBC	HL,DE
	LD	(ECopyBytes+2),HL
	LD	HL,(ECopyFiles)
	LD	A,H
	OR	L
	JR	Z,CopyEnd
	DEC	HL
	LD	(ECopyFiles),HL
	LD	A,H
	OR	L
	JR	Z,CopyEnd
	LD	HL,(AdrCopyFile)
	LD	DE,#0018
	ADD	HL,DE
	BIT	0,(HL)
	JR	Z,$-3
	LD	(AdrCopyFile),HL
	JP	CopyNextFile

CopyEnd	POP	AF
	OUT	(PAGE3),A
	POP	IY
	CALL	MakeWindow
	DEFB	#7F
	DEFB	#00
	LD	HL,(ECopyFiles)
	LD	(IY+PanelMFl),L
	LD	(IY+PanelMFh),H
	LD	HL,(ECopyBytes)
	LD	(IY+PanelMBl1),L
	LD	(IY+PanelMBh1),H
	LD	HL,(ECopyBytes+2)
	LD	(IY+PanelMBl2),L
	LD	(IY+PanelMBh2),H
	PUSH	IY
	BIT	0,(IY+PanelFlg)
	LD	IY,RightPanel
	JR	Z,$+6
	LD	IY,LeftPanel
	PUSH	IY
	POP	HL
	LD	DE,BegPath
	ADD	HL,DE
	LD	C,#1D
	PUSH	IY
	RST	#10
	POP	IY
	PUSH	AF
	CALL	C,DOSError
	POP	AF
	CALL	NC,RefreshDIR
	POP	IY
	PUSH	IY
	POP	HL
	LD	DE,BegPath
	ADD	HL,DE
	LD	C,#1D
	PUSH	IY
	RST	#10
	POP	IY
	JP	C,BegDIRECTORY
	CALL	PrintDIR
	CALL	PrnFileInfo
	CALL	SetMouse
	RET 
CopyError2
	PUSH	AF
	LD	A,(FHandle1)
	LD	C,#12
	RST	#10
	POP	AF
CopyError1
	PUSH	AF
	LD	A,(MemIndef)
	LD	C,#3E
	RST	#10
	POP	AF
	CALL	DOSError
	JP	CopyEnd
CopyBreak
	POP	HL
	POP	AF
	OUT	(PAGE3),A
	LD	A,(FHandle2)
	LD	C,#12
	RST	#10
	LD	A,(FHandle1)
	LD	C,#12
	RST	#10
	LD	A,(MemIndef)
	LD	C,#3E
	RST	#10
	LD	IX,(AdrCopyFile)
	LD	HL,(AdrCopyFile)
	INC	HL
	LD	DE,WorkBuffer
	PUSH	DE
	CALL	MakeDOSname
	POP	HL
	LD	A,(IX+#0E)
	LD	C,#0E		;DELETE
	PUSH	IY
	RST	#10
	POP	IY
	JP	CopyEnd
;--------------------------------------------------------------
OverWrite
	CALL	SetMouse
	CALL	MakeWindow
	DEFB	#01
	DEFW	#00B4,#0058
	DEFW	#0118,#0038
	DEFB	#02	;Head place
	DEFW	#0004,#0002
	DEFW	#0110,#000A
	DEFB	#02
	DEFB	#01	;Text Line
	DEFW	#0074,#0003
	DEFB	#2F
	DEFB	"Message",0
	DEFB	#01	;Text Line
	DEFW	#0050,#0010
	DEFB	#80
	DEFB	"The following file EXISTS:",0
	DEFB	#04	;UpRectan
	DEFW	#0010,#0026
	DEFW	#0038,#000E
	DEFB	#01	;Text Line
	DEFW	#0016,#0029
	DEFB	#80
	DEFB	"OverWrite",0
	DEFB	#04	;UpRectan
	DEFW	#0050,#0026
	DEFW	#0038,#000E
	DEFB	#01	;Text Line
	DEFW	#0066,#0029
	DEFB	#80
	DEFB	"All",0
	DEFB	#04	;UpRectan
	DEFW	#0090,#0026
	DEFW	#0038,#000E
	DEFB	#01	;Text Line
	DEFW	#00A2,#0029
	DEFB	#80
	DEFB	"Skip",0
	DEFB	#04	;UpRectan
	DEFW	#00D0,#0026
	DEFW	#0038,#000E
	DEFB	#01	;Text Line
	DEFW	#00DC,#0029
	DEFB	#80
	DEFB	"Cancel",0
	DEFB	#00
	LD	HL,(CopyTo)
	LD	DE,WorkBuffer
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	DEC	HL
	LD	A,"\\"
	CP	(HL)
	JR	Z,$+4
	LD	(DE),A
	INC	DE
	LD	HL,(AdrCopyFile)
	INC	HL
	CALL	MakeDOSname
	LD	IX,#00F8
	LD	HL,WorkBuffer
	LD	DE,#0140
	LD	BC,#0072
	LD	A,#80
	CALL	PrnRangPathC
OvWrtLp	LD	IX,OverWrtTab
	CALL	TestCoords
	LD	C,#31
	RST	#10
	JR	Z,OvWrtLp
	LD	A,B
	OR	A
	JR	NZ,OvWrtLp
	LD	A,E
	CP	#1B
	LD	HL,OverExit
	JR	Z,OvrJump
	CP	#0D
	LD	HL,OverWrtFile
	JR	Z,OvrJump
	RES	5,A
	CP	"O"
	LD	HL,OverWrtFile
	JR	Z,OvrJump
	CP	"A"
	LD	HL,OverWrtAll
	JR	Z,OvrJump
	CP	"S"
	LD	HL,OverSkip
	JR	Z,OvrJump
	CP	"C"
	JR	NZ,OvWrtLp
	LD	HL,OverExit
OvrJump	CALL	MakeWindow
	DEFB	#7F
	DEFB	#00
	JP	(HL)
OverWrtAll
	LD	A,#01
	LD	(OverWriteFlg),A
OverWrtFile
	CALL	SetClock
	LD	IX,(AdrCopyFile)
	LD	HL,(AdrCopyFile)
	INC	HL
	LD	DE,WorkBuffer
	PUSH	DE
	CALL	MakeDOSname
	POP	HL
	LD	A,(IX+#0E)
	LD	C,#0A
	RST	#10
	RET 
OverSkip
	CALL	SetClock
	LD	IX,(AdrCopyFile)
	LD	L,(IX+#0F)
	LD	H,(IX+#10)
	LD	E,(IX+#11)
	LD	D,(IX+#12)
	CALL	ConvLenToBank
	ADD	HL,HL
	EX	DE,HL
	ADC	HL,HL
	EX	DE,HL
	LD	IX,ProcessAll
	LD	C,(IX+ProcCURl1)
	LD	B,(IX+ProcCURh1)
	ADD	HL,BC
	LD	(IX+ProcCURl1),L
	LD	(IX+ProcCURh1),H
	LD	C,(IX+ProcCURl2)
	LD	B,(IX+ProcCURh2)
	EX	DE,HL
	ADC	HL,BC
	LD	(IX+ProcCURl2),L
	LD	(IX+ProcCURh2),H
	CALL	PrnProcess
	LD	HL,CloseFile1
	EX	(SP),HL
	RET 
OverExit
	INC	SP
	INC	SP
	LD	IX,(AdrCopyFile)
	BIT	0,(IX+#00)
	JP	Z,CloseFile1
	LD	A,(FHandle1)
	LD	C,#12
	RST	#10
	LD	A,(MemIndef)
	LD	C,#3E
	RST	#10
	POP	IY
	JP	CopyEnd
;--------------------------------------------------------------
AdrCopyFile
	DEFW	#0000		;Адрес описателя текущего файла
CopyFrom
	DEFW	#0000		;Адрес пути откуда
CopyTo
	DEFW	#0000		;Адрес пути куда
ECopyFiles
	DEFW	#0000		;Кол-во	копируемых файлов
ECopyBytes
	DEFS	4,0		;Кол-во	копируемых байтов
OverWriteFlg
	DEFB	#00		;Флаг перезаписи файлов
FreeBanks
	DEFW	#0000		;Кол-во	свободных банков
ReadLen
	DEFS	4,0		;Длина читаемого файла
WriteLen
	DEFS	4,0		;Длина записываемого файла
FHandle1
	DEFB	#00		;Файл источник
FHandle2
	DEFB	#00		;Файл приемник
MemIndef
	DEFB	#00		;Индефик.памяти	под копирование
;--------------------------------------------------------------
ConvLenToBank
	LD	A,H
	LD	H,L
	LD	L,#00
	SLA	A
	RL	E
	RL	D
	RL	L
	SLA	A
	RL	E
	RL	D
	RL	L
	OR	H
	LD	H,#00
	EX	DE,HL
	JR	Z,$+3
	INC	HL
	LD	A,H
	OR	L
	RET	NZ
	INC	DE
	RET 
PrnFromTo
	LD	HL,(CopyFrom)
	LD	DE,WorkBuffer
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	DEC	HL
	LD	A,"\\"
	CP	(HL)
	JR	Z,$+4
	LD	(DE),A
	INC	DE
	LD	HL,(AdrCopyFile)
	INC	HL
	CALL	MakeDOSname
	LD	HL,(CopyTo)
	LD	DE,WorkBuffer+#100
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	DEC	HL
	LD	A,"\\"
	CP	(HL)
	JR	Z,$+4
	LD	(DE),A
	INC	DE
	LD	HL,(AdrCopyFile)
	INC	HL
	CALL	MakeDOSname
	CALL	MakeWindow
	DEFB	#80
	DEFB	#02
	DEFW	#00CC,#0061
	DEFW	#0100,#0012
	DEFB	#08
	DEFB	#00
	LD	IX,#0100
	LD	HL,WorkBuffer
	LD	DE,#00CC
	LD	BC,#0061
	LD	A,#80
	CALL	PrnRangPathL
	LD	IX,#0100
	LD	HL,WorkBuffer+#100
	LD	DE,#00CC
	LD	BC,#006B
	LD	A,#80
	CALL	PrnRangPathL
	RET 
NextProcess
	LD	IX,ProcessAll
	LD	L,(IX+ProcCURl1)
	LD	H,(IX+ProcCURh1)
	INC	HL
	LD	(IX+ProcCURl1),L
	LD	(IX+ProcCURh1),H
	LD	A,H
	OR	L
	JR	NZ,NextPr1
	LD	L,(IX+ProcCURl2)
	LD	H,(IX+ProcCURh2)
	INC	HL
	LD	(IX+ProcCURl2),L
	LD	(IX+ProcCURh2),H
NextPr1	CALL	PrnProcess
	LD	IX,ProcessOne
	LD	L,(IX+ProcCURl1)
	LD	H,(IX+ProcCURh1)
	INC	HL
	LD	(IX+ProcCURl1),L
	LD	(IX+ProcCURh1),H
	LD	A,H
	OR	L
	JR	NZ,NextPr2
	LD	L,(IX+ProcCURl2)
	LD	H,(IX+ProcCURh2)
	INC	HL
	LD	(IX+ProcCURl2),L
	LD	(IX+ProcCURh2),H
NextPr2	CALL	PrnProcess
	RET 
ProcessAll
	DEFW	#00B2		;X позиция
	DEFW	#008A		;Y позиция
	DEFW	#011C		;Длина X
	DEFW	#0000		;Коэффициент для процесса
	DEFW	#0000		;Коррекция коэфициента
	DEFW	#0000		;Максимум
	DEFW	#0000
	DEFW	#0000		;Текущее
	DEFW	#0000
	DEFB	#4F
ProcessOne
	DEFW	#00B2		;X позиция
	DEFW	#0078		;Y позиция
	DEFW	#011C		;Длина X
	DEFW	#0000		;Коэффициент для процесса
	DEFW	#0000		;Коррекция коэфициента
	DEFW	#0000		;Максимум
	DEFW	#0000
	DEFW	#0000		;Текущее
	DEFW	#0000
	DEFB	#4F
PathStr
	DEFB	#80,#00,#00,#00
PathLen	DEFB	#00
	DEFW	#00AA,#006A
	DEFW	#0144
	DEFB	#F0
CurPath	DEFS	#81,0
;[]==========================================================[]
ReNameR
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	LD	A,#C0
	OUT	(YPORT),A
	IN	A,(PAGE3)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE3),A
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	ADD	HL,DE
	BIT	1,(IY+ViewFlg)
	JR	Z,ReNameNr
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,H
	OR	#C0
	LD	H,A
	INC	HL
	INC	HL
	LD	DE,CurName
	LD	BC,#000D
	LDIR 
	LD	A,#10
	LD	(CurAttrib),A
	JR	ReNameN
ReNameNr
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	E,L
	LD	D,H
	ADD	HL,HL
	ADD	HL,DE
	LD	A,H
	OR	#C0
	LD	H,A
	PUSH	HL
	INC	HL
	LD	DE,CurName
	CALL	MakeDOSname
	POP	HL
	LD	BC,#000E
	ADD	HL,BC
	LD	A,(HL)
	LD	(CurAttrib),A
ReNameN	POP	AF
	OUT	(PAGE3),A
	LD	HL,CurName
	LD	A,(HL)
	CP	"."
	RET	Z
	CP	"\\"
	RET	Z
	LD	DE,Name
	LD	C,#00
	LD	A,#20
	LDI 
	CP	(HL)
	JR	C,$-3
	LD	A,C
	NEG 
	LD	(NameLen),A
	CALL	ResInvert
	LD	HL,SetInvert
	PUSH	HL
	LD	HL,CurName
	LD	DE,RNfile
	LD	C,#0C
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	OR	C
	JR	Z,RNnxt
	LD	B,C
	LD	A,#20
	LD	(DE),A
	INC	DE
	DJNZ	$-2
RNnxt	CALL	MakeWindow
	DEFB	#01
	DEFW	#00D0,#0051
	DEFW	#00E0,#003E
	DEFB	#02	;Head place
	DEFW	#0004,#0002
	DEFW	#00D8,#000A
	DEFB	#00
	DEFB	#01	;Text Line
	DEFW	#005E,#0003
	DEFB	#0F
	DEFB	"Rename",0
	DEFB	#04	;UpRectan
	DEFW	#0020,#002A
	DEFW	#0048,#000E
	DEFB	#01	;Text Line
	DEFW	#003C,#002D
	DEFB	#80
	DEFB	"Ok",0
	DEFB	#04	;UpRectan
	DEFW	#0078,#002A
	DEFW	#0048,#000E
	DEFB	#01	;Text Line
	DEFW	#008C,#002D
	DEFB	#80
	DEFB	"Cancel",0
	DEFB	#01	;Text Line
	DEFW	#000E,#0011
	DEFB	#80
	DEFB	"Rename:  "
RNfile	DEFB	"            ",0
	DEFB	#01	;Text Line
	DEFW	#0028,#001D
	DEFB	#80
	DEFB	"To:",0
	DEFB	#03	;Углубление
	DEFW	#003C,#001A
	DEFW	#0086,#000C
	DEFB	#02	;Head place
	DEFW	#003E,#001B
	DEFW	#0082,#000A
	DEFB	#0F
	DEFB	#00
	LD	IX,NameStr
	LD	HL,ReNameTab
	CALL	InputLine
	CALL	MakeWindow
	DEFB	#7F
	DEFB	#00
	RET	C
	LD	A,(NameLen)
	OR	A
	RET	Z
	CALL	SetClock
	LD	HL,SetMouse
	EX	(SP),HL
	PUSH	HL
	BIT	1,(IY+ViewFlg)
	JR	Z,ReName0
	PUSH	IY
	POP	HL
	LD	DE,BegPath
	ADD	HL,DE
	LD	DE,WorkBuffer
	PUSH	DE
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	EX	DE,HL
	LD	A,"\\"
	DEC	HL
	CP	(HL)
	JR	NZ,$-2
	INC	HL
	LD	(HL),#00
	POP	HL
	LD	C,#1D
	PUSH	IY
	RST	#10
	POP	IY
	PUSH	AF
	CALL	C,DOSError
	POP	AF
	RET	C
ReName0	LD	HL,CurName
	LD	DE,Name
	LD	C,#10
	PUSH	IY
	RST	#10
	POP	IY
	PUSH	AF
	CALL	C,DOSError
	POP	AF
	RET	C
	LD	A,(CurAttrib)
	BIT	4,A
	JP	NZ,ReNameDIR
	LD	HL,Name
	LD	DE,PrevFile
	LD	A,(NameLen)
	LD	B,A
	LD	A,(HL)
	CALL	CorrBigChar
	LD	(DE),A
	INC	HL
	INC	DE
	DJNZ	$-7
	SUB	A
	LD	(DE),A
	BIT	1,(IY+ViewFlg)
	JR	NZ,ReName1
	CALL	ReadDIR
	CALL	FindPrevFile
	CALL	PrintDIR
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	InitScrBar
	LD	A,(IY+ViewFlg)
	AND	#03
	PUSH	AF
	CALL	Z,PrnHScrBar
	POP	AF
	CALL	NZ,PrnVScrBar
ReName1	LD	HL,LeftPanel+BegPath
	LD	DE,RightPanel+BegPath
ReName2	LD	A,(DE)
	CP	(HL)
	RET	NZ
	INC	HL
	INC	DE
	LD	A,(HL)
	OR	A
	JR	NZ,ReName2
	LD	A,(DE)
	OR	A
	RET	NZ
	PUSH	IY
	BIT	0,(IY+PanelFlg)
	LD	IY,RightPanel
	JR	Z,$+6
	LD	IY,LeftPanel
	BIT	1,(IY+ViewFlg)
	JR	NZ,ReNameE
	CALL	ReadDIR
	CALL	PrintDIR
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	InitScrBar
	LD	A,(IY+ViewFlg)
	AND	#03
	PUSH	AF
	CALL	Z,PrnHScrBar
	POP	AF
	CALL	NZ,PrnVScrBar
ReNameE	POP	IY
	RET 
ReNameDIR
	LD	HL,Name
	LD	DE,PrevDIR
	LD	A,(NameLen)
	LD	B,A
	LD	A,(HL)
	CALL	CorrSmallChar
	LD	(HL),A
	LD	(DE),A
	INC	HL
	INC	DE
	DJNZ	$-8
	SUB	A
	LD	(DE),A
	LD	A,(TreeFlag)
	OR	A
	JP	Z,ReNameExit
	BIT	1,(IY+ViewFlg)
	EX	AF,AF'
	PUSH	IY
	IN	A,(PAGE3)
	PUSH	AF
	LD	IY,LeftPanel
	BIT	1,(IY+ViewFlg)
	JR	NZ,$+6
	LD	IY,RightPanel
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE3),A
	EX	AF,AF'
	JR	Z,ReNameTree
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	ADD	HL,DE
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,H
	OR	#C0
	LD	H,A
	EX	DE,HL
	JR	ReNameEx
ReNameTree
	BIT	0,(IY+PanelFlg)
	LD	HL,LeftPanel
	JR	NZ,$+5
	LD	HL,RightPanel
	LD	DE,BegPath
	ADD	HL,DE
	INC	HL
	INC	HL
	CALL	FindTreeDIR
	JP	C,ReNameT
	LD	HL,#C001-#10
	LD	BC,#0010
	ADD	HL,BC
	BIT	0,(HL)
	JR	Z,$-3
	ADD	HL,BC
	DEC	HL
FRName1	PUSH	HL
	LD	DE,CurName
	INC	HL
	INC	HL
FRName2	LD	A,(DE)
	OR	A
	JR	Z,FRName4
	CP	(HL)
	JR	NZ,FRName3
	INC	HL
	INC	DE
	JR	FRName2
FRName3	POP	HL
	BIT	7,(HL)
	JR	NZ,ReNameT
	ADD	HL,BC
	JR	FRName1
FRName4
	LD	A,(HL)
	OR	A
	JR	NZ,FRName3
	POP	DE
ReNameEx
	LD	HL,Name
	INC	DE
	INC	DE
	LD	C,#0D
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	LD	B,C
	LD	(DE),A
	INC	DE
	DJNZ	$-2
	LD	HL,WorkBuffer
	LD	C,#1E
	PUSH	IY
	RST	#10
	POP	IY
	LD	HL,BegDIR
	LD	C,#1D
	PUSH	IY
	RST	#10
	POP	IY
	JR	C,ReNameC
	LD	HL,TreeName
	LD	DE,WorkBuffer+#100
	LD	BC,#0019
	LD	A,(FileAtribut)
	PUSH	IY
	RST	#10
	POP	IY
	JR	C,ReNameC
	LD	HL,TreeName
	SUB	A
	LD	C,#0A
	PUSH	IY
	RST	#10
	POP	IY
	JR	C,ReNameC
	LD	L,(IY+PanelEFl)
	LD	H,(IY+PanelEFh)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	EX	DE,HL
	LD	HL,#C000
	LD	C,#14
	PUSH	AF
	RST	#10
	POP	AF
	LD	C,#12
	RST	#10
ReNameC	LD	HL,WorkBuffer
	LD	C,#1D
	RST	#10
ReNameT	POP	AF
	OUT	(PAGE3),A
	POP	IY
	BIT	1,(IY+ViewFlg)
	JR	NZ,ReNameExt1
	CALL	ReadDIR
	CALL	FindPrevDIR
	CALL	PrintDIR
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	InitScrBar
	LD	A,(IY+ViewFlg)
	AND	#03
	PUSH	AF
	CALL	Z,PrnHScrBar
	POP	AF
	CALL	NZ,PrnVScrBar
	PUSH	IY
	BIT	0,(IY+PanelFlg)
	LD	IY,RightPanel
	JR	Z,$+6
	LD	IY,LeftPanel
	CALL	PrintDIR
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	PrnVScrBar
	POP	IY
	RET 
ReNameExt1
	INC	SP
	INC	SP
	CALL	PrintDIR
	CALL	PrnFileInfo
	CALL	SetInvert
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	PrnVScrBar
	CALL	TestTreeBeg
	PUSH	IY
	CALL	MakeTreePath
	EX	DE,HL
	BIT	0,(IY+PanelFlg)
	LD	IY,RightPanel
	JR	Z,$+6
	LD	IY,LeftPanel
	PUSH	IY
	POP	HL
	LD	BC,BegPath
	ADD	HL,BC
	INC	HL
	INC	HL
	EX	DE,HL
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	LD	(DE),A
	CALL	PrintPath
	POP	IY
	RET 
ReNameExit
	CALL	ReadDIR
	CALL	FindPrevDIR
	CALL	PrintDIR
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	InitScrBar
	LD	A,(IY+ViewFlg)
	AND	#03
	PUSH	AF
	CALL	Z,PrnHScrBar
	POP	AF
	CALL	NZ,PrnVScrBar
	LD	HL,LeftPanel+BegPath
	LD	DE,RightPanel+BegPath
RNameE1	LD	A,(DE)
	CP	(HL)
	RET	NZ
	INC	HL
	INC	DE
	LD	A,(HL)
	OR	A
	JR	NZ,RNameE1
	LD	A,(DE)
	OR	A
	RET	NZ
	PUSH	IY
	BIT	0,(IY+PanelFlg)
	LD	IY,RightPanel
	JR	Z,$+6
	LD	IY,LeftPanel
	BIT	1,(IY+ViewFlg)
	JR	NZ,RNameE2
	CALL	ReadDIR
	CALL	PrintDIR
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	InitScrBar
	LD	A,(IY+ViewFlg)
	AND	#03
	PUSH	AF
	CALL	Z,PrnHScrBar
	POP	AF
	CALL	NZ,PrnVScrBar
RNameE2	POP	IY
	RET 
CurAttrib
	DEFB	#00
CurName
	DEFS	#0D,#00
NameStr
	DEFB	#0C,#00,#00,#00
NameLen	DEFB	#00
	DEFW	#0110,#006E
	DEFW	#0068
	DEFB	#F0
Name	DEFS	#0D,#00



;[]==========================================================[]
MakeDIRR
	CALL	ResInvert
	LD	HL,SetInvert
	PUSH	HL
	LD	A,#C0
	OUT	(YPORT),A
	CALL	MakeWindow
	DEFB	#01
	DEFW	#00C8,#0051
	DEFW	#00F0,#003E
	DEFB	#02	;Head place
	DEFW	#0004,#0002
	DEFW	#00E8,#000A
	DEFB	#00
	DEFB	#01	;Text Line
	DEFW	#0054,#0003
	DEFB	#0F
	DEFB	"Make directory",0
	DEFB	#04	;UpRectan
	DEFW	#0028,#002A
	DEFW	#0048,#000E
	DEFB	#01	;Text Line
	DEFW	#0044,#002D
	DEFB	#80
	DEFB	"Ok",0
	DEFB	#04	;UpRectan
	DEFW	#0080,#002A
	DEFW	#0048,#000E
	DEFB	#01	;Text Line
	DEFW	#0094,#002D
	DEFB	#80
	DEFB	"Cancel",0
	DEFB	#01	;Text Line
	DEFW	#000C,#0019
	DEFB	#80
	DEFB	"New directory:",0
	DEFB	#03	;Углубление
	DEFW	#0056,#0016
	DEFW	#0086,#000C
	DEFB	#02	;Head place
	DEFW	#0058,#0017
	DEFW	#0082,#000A
	DEFB	#0F
	DEFB	#00
	LD	IX,MakeDIRStr
	LD	HL,MakeDIRTab
	CALL	InputLine
	CALL	MakeWindow
	DEFB	#7F
	DEFB	#00
	RET	C
	LD	A,(MDIRLen)
	OR	A
	RET	Z
	LD	HL,NewDIR
	LD	B,A
MkDIRlp	LD	A,(HL)
	INC	HL
	CP	":"
	RET	Z
	CP	"\\"
	RET	Z
	DJNZ	MkDIRlp
	CALL	SetClock
	LD	HL,SetMouse
	PUSH	HL
	BIT	1,(IY+ViewFlg)
	JR	Z,MkDIR0
	PUSH	IY
	POP	HL
	LD	DE,BegPath
	ADD	HL,DE
	LD	C,#1D
	PUSH	IY
	RST	#10
	POP	IY
	PUSH	AF
	CALL	C,DOSError
	POP	AF
	RET	C
MkDIR0	LD	HL,NewDIR
	LD	C,#1B
	PUSH	IY
	RST	#10
	POP	IY
	PUSH	AF
	CALL	C,DOSError
	POP	AF
	RET	C
	LD	HL,NewDIR
	LD	DE,PrevDIR
	LD	A,(MDIRLen)
	LD	B,A
	LD	A,(HL)
	CALL	CorrSmallChar
	LD	(HL),A
	LD	(DE),A
	INC	HL
	INC	DE
	DJNZ	$-8
	SUB	A
	LD	(DE),A
	LD	A,(TreeFlag)
	OR	A
	JP	Z,MkDIRnxt1
	BIT	1,(IY+ViewFlg)
	EX	AF,AF'
	PUSH	IY
	LD	IY,LeftPanel
	BIT	1,(IY+ViewFlg)
	JR	NZ,$+6
	LD	IY,RightPanel
	LD	A,(IY+PanelEFh)
	BIT	2,A
	JP	NZ,MkDIRn0
	IN	A,(PAGE3)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE3),A
	EX	AF,AF'
	JR	NZ,FnTree1
	BIT	0,(IY+PanelFlg)
	LD	HL,LeftPanel
	JR	NZ,$+5
	LD	HL,RightPanel
	LD	DE,BegPath
	ADD	HL,DE
	INC	HL
	INC	HL
	CALL	FindTreeDIR
	JP	C,MkDIRn
	LD	HL,#C001-#10
	LD	BC,#0010
	ADD	HL,BC
	BIT	0,(HL)
	JR	Z,$-3
	DEC	HL
	JR	FnTree2
FnTree1	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	ADD	HL,DE
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,H
	OR	#C0
	LD	H,A
FnTree2	LD	E,(HL)
	LD	BC,#000F
	ADD	HL,BC
	LD	D,(HL)
	LD	(HL),B
	INC	HL
	INC	E
	LD	A,D
	INC	A
	JR	Z,MkDIRend
	LD	A,E
	AND	#7F
	LD	LX,A
	LD	A,(HL)
	AND	#7F
	CP	LX
	JR	NZ,MkDIRend
MkDIR10	LD	A,(HL)
	AND	#7F
	CP	LX
	JR	Z,MkDIR11
	ADD	HL,BC
	INC	HL
	JR	MkDIR10
MkDIR11	LD	A,(HL)
	RES	7,(HL)
	ADD	HL,BC
	LD	D,(HL)
	LD	(HL),B
	INC	HL
	BIT	7,A
	JR	Z,MkDIR10
MkDIR12	LD	A,(HL)
	AND	#7F
	CP	LX
	JR	C,MkDIRend
	ADD	HL,BC
	LD	D,(HL)
	LD	(HL),B
	INC	HL
	LD	A,D
	INC	A
	JR	NZ,MkDIR12
MkDIRend
	PUSH	HL
	PUSH	DE
	LD	C,L
	LD	B,H
	LD	L,(IY+PanelEFl)
	LD	H,(IY+PanelEFh)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,H
	OR	#C0
	LD	H,A
	PUSH	HL
	OR	A
	SBC	HL,BC
	LD	C,L
	LD	B,H
	POP	HL
	LD	A,L
	LD	D,H
	ADD	A,#10
	LD	E,A
	JR	NC,$+3
	INC	D
	LD	A,B
	OR	C
	JR	Z,$+6
	DEC	HL
	DEC	DE
	LDDR 
	POP	BC
	POP	DE
	LD	A,B
	EX	AF,AF'
	LD	A,C
	SET	7,A
	LD	(DE),A
	INC	DE
	SUB	A
	LD	(DE),A
	INC	DE
	LD	HL,NewDIR
	LD	C,#0D
	LDI 
	CP	(HL)
	JR	NZ,$-3
	LD	B,C
	LD	(DE),A
	INC	DE
	DJNZ	$-2
	EX	AF,AF'
	LD	(DE),A
	LD	L,(IY+PanelEFl)
	LD	H,(IY+PanelEFh)
	INC	HL
	LD	(IY+PanelEFl),L
	LD	(IY+PanelEFh),H
	LD	HL,WorkBuffer
	LD	C,#1E
	PUSH	IY
	RST	#10
	POP	IY
	LD	HL,BegDIR
	LD	C,#1D
	PUSH	IY
	RST	#10
	POP	IY
	JR	C,MkDIR2
	LD	HL,TreeName
	LD	DE,WorkBuffer+#100
	LD	BC,#0019
	LD	A,(FileAtribut)
	PUSH	IY
	RST	#10
	POP	IY
	JR	C,MkDIR2
	LD	HL,TreeName
	SUB	A
	LD	C,#0A
	PUSH	IY
	RST	#10
	POP	IY
	JR	C,MkDIR2
	LD	L,(IY+PanelEFl)
	LD	H,(IY+PanelEFh)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	EX	DE,HL
	LD	HL,#C000
	LD	C,#14
	PUSH	AF
	RST	#10
	POP	AF
	LD	C,#12
	RST	#10
MkDIR2	LD	HL,WorkBuffer
	LD	C,#1D
	RST	#10
MkDIRn	POP	AF
	OUT	(PAGE3),A
MkDIRn0	POP	IY
	BIT	1,(IY+ViewFlg)
	JR	NZ,MkDIRn1
MkDIRnxt1
	CALL	ReadDIR
	CALL	FindPrevDIR
MkDIRn1	CALL	PrintDIR
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	InitScrBar
	LD	A,(IY+ViewFlg)
	AND	#03
	PUSH	AF
	CALL	Z,PrnHScrBar
	POP	AF
	CALL	NZ,PrnVScrBar
	PUSH	IY
	BIT	0,(IY+PanelFlg)
	LD	IY,RightPanel
	JR	Z,$+6
	LD	IY,LeftPanel
	BIT	1,(IY+ViewFlg)
	JR	NZ,MkDIRn2
	LD	HL,LeftPanel+BegPath
	LD	DE,RightPanel+BegPath
MkDIRrf	LD	A,(DE)
	CP	(HL)
	JR	NZ,MkDIRex
	INC	HL
	INC	DE
	LD	A,(HL)
	OR	A
	JR	NZ,MkDIRrf
	LD	A,(DE)
	OR	A
	JR	NZ,MkDIRex
	CALL	ReadDIR
MkDIRn2	CALL	PrintDIR
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	InitScrBar
	LD	A,(IY+ViewFlg)
	AND	#03
	PUSH	AF
	CALL	Z,PrnHScrBar
	POP	AF
	CALL	NZ,PrnVScrBar
MkDIRex	POP	IY
	RET 
MakeDIRStr
	DEFB	#0C,#00,#00,#00
MDIRLen	DEFB	#00
	DEFW	#0122,#006A
	DEFW	#0068
	DEFB	#F0
NewDIR	DEFS	#0D,#00
;[]==========================================================[]
DeleteFilesR
	LD	A,(IY+PanelEFl)
	OR	(IY+PanelEFh)
	RET	Z
	LD	A,#C0
	OUT	(YPORT),A
	LD	A,(IY+PanelMFl)
	OR	(IY+PanelMFh)
	JR	NZ,DeleteMark
	IN	A,(PAGE3)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE3),A
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	ADD	HL,DE
	BIT	1,(IY+ViewFlg)
	JR	Z,DelFile
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,H
	OR	#C0
	LD	H,A
	LD	(AdrDelFile),HL
	INC	HL
	JR	DelFil1
DelFile	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	E,L
	LD	D,H
	ADD	HL,HL
	ADD	HL,DE
	LD	A,H
	OR	#C0
	LD	H,A
	LD	(AdrDelFile),HL
DelFil1	INC	HL
	LD	E,(HL)
	POP	AF
	OUT	(PAGE3),A
	LD	A,E
	CP	"."
	RET	Z
	CP	"\\"
	RET	Z
	JR	DelNext
DeleteMark
	IN	A,(PAGE3)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE3),A
	LD	HL,#C000-#18
	LD	BC,#0018
	ADD	HL,BC
	BIT	0,(HL)
	JR	Z,$-3
	LD	(AdrDelFile),HL
	POP	AF
	OUT	(PAGE3),A
DelNext	CALL	ResInvert
	LD	HL,SetInvert
	PUSH	HL

	IN	A,(PAGE3)
	PUSH	AF
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE3),A
	SUB	A
	LD	(DeleteFlag),A
DeleteMain
	CALL	MakeWindow
	DEFB	#01
	DEFW	#00B4,#0050
	DEFW	#0118,#0038
	DEFB	#02	;Head place
	DEFW	#0004,#0002
	DEFW	#0110,#000A
	DEFB	#00
	DEFB	#01	;Text Line
	DEFW	#0074,#0003
	DEFB	#0F
	DEFB	"Delete file",0
	DEFB	#01	;Text Line
	DEFW	#0038,#0010
	DEFB	#80
	DEFB	"The following file will be DELETED:",0
	DEFB	#04	;UpRectan
	DEFW	#0010,#0026
	DEFW	#0038,#000E
	DEFB	#01	;Text Line
	DEFW	#001C,#0029
	DEFB	#80
	DEFB	"Delete",0
	DEFB	#04	;UpRectan
	DEFW	#0050,#0026
	DEFW	#0038,#000E
	DEFB	#01	;Text Line
	DEFW	#0066,#0029
	DEFB	#80
	DEFB	"All",0
	DEFB	#04	;UpRectan
	DEFW	#0090,#0026
	DEFW	#0038,#000E
	DEFB	#01	;Text Line
	DEFW	#00A2,#0029
	DEFB	#80
	DEFB	"Skip",0
	DEFB	#04	;UpRectan
	DEFW	#00D0,#0026
	DEFW	#0038,#000E
	DEFB	#01	;Text Line
	DEFW	#00DC,#0029
	DEFB	#80
	DEFB	"Cancel",0
	DEFB	#00
	PUSH	IY
	POP	HL
	LD	DE,BegPath
	ADD	HL,DE
	LD	DE,WorkBuffer
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	LD	(DE),A
	BIT	1,(IY+ViewFlg)
	JR	NZ,DelLp0
	DEC	HL
	LD	A,"\\"
	CP	(HL)
	JR	Z,$+4
	LD	(DE),A
	INC	DE
	CALL	MakeDELname
DelLp0	LD	IX,#00F8
	LD	HL,WorkBuffer
	LD	DE,#0140
	LD	BC,#006A
	LD	A,#80
	CALL	PrnRangPathC
DelLoop	LD	IX,DeleteTab
	CALL	TestCoords
	LD	C,#31
	RST	#10
	JR	Z,DelLoop
	LD	A,B
	OR	A
	JR	NZ,DelLoop
	LD	A,E
	CP	#1B
	LD	HL,DelExit
	JR	Z,DelJump
	CP	#0D
	LD	HL,DelDelete
	JR	Z,DelJump
	RES	5,A
	CP	"D"
	LD	HL,DelDelete
	JR	Z,DelJump
	CP	"A"
	LD	HL,DelAll
	JR	Z,DelJump
	CP	"S"
	LD	HL,DelSkip
	JR	Z,DelJump
	CP	"C"
	JR	NZ,DelLoop
	LD	HL,DelExit
DelJump	CALL	MakeWindow
	DEFB	#7F
	DEFB	#00
	JP	(HL)
AdrDelFile
	DEFW	#0000
DeleteFlag
	DEFB	#00
MakeDELname
	LD	HL,(AdrDelFile)
	INC	HL
	BIT	1,(IY+ViewFlg)
	JR	NZ,MakeDELn1
	CALL	MakeDOSname
	RET 
MakeDELn1
	INC	HL
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	LD	(DE),A
	RET 
;--------------------------------------------------------------
DelSkip
	LD	C,(IY+PanelMFl)
	LD	B,(IY+PanelMFh)
	LD	A,B
	OR	C
	JP	Z,DelExit
	LD	IX,(AdrDelFile)
	RES	0,(IX+#00)
	LD	L,(IY+PanelMBl1)
	LD	H,(IY+PanelMBh1)
	LD	E,(IX+#0F)
	LD	D,(IX+#10)
	OR	A
	SBC	HL,DE
	LD	(IY+PanelMBl1),L
	LD	(IY+PanelMBh1),H
	LD	L,(IY+PanelMBl2)
	LD	H,(IY+PanelMBh2)
	LD	E,(IX+#11)
	LD	D,(IX+#12)
	SBC	HL,DE
	LD	(IY+PanelMBl2),L
	LD	(IY+PanelMBh2),H
	DEC	BC
	LD	(IY+PanelMFl),C
	LD	(IY+PanelMFh),B
	LD	A,B
	OR	C
	JP	Z,DelExit
	LD	HL,(AdrDelFile)
	LD	DE,#0018
	ADD	HL,DE
	BIT	0,(HL)
	JR	Z,$-3
	LD	(AdrDelFile),HL
	CALL	PrintDIR
	JP	DeleteMain
DelDelete
	CALL	SetClock
	BIT	1,(IY+ViewFlg)
	JR	Z,DelDel0
	PUSH	IY
	POP	HL
	LD	DE,BegPath
	ADD	HL,DE
	LD	DE,WorkBuffer
	PUSH	DE
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	EX	DE,HL
	LD	A,"\\"
	DEC	HL
	CP	(HL)
	JR	NZ,$-2
	INC	HL
	LD	(HL),#00
	POP	HL
	LD	C,#1D
	PUSH	IY
	RST	#10
	POP	IY
	PUSH	AF
	CALL	C,DOSError
	POP	AF
	JP	C,DelExit
DelDel0	LD	IX,(AdrDelFile)
	LD	DE,WorkBuffer
	PUSH	DE
	CALL	MakeDELname
	POP	HL
	LD	C,#1C		;RMDIR
	BIT	1,(IY+ViewFlg)
	JR	NZ,DelDel1
	LD	A,(IX+#0E)
	BIT	4,A
	JR	NZ,DelDel1
	LD	C,#0E		;DELETE
DelDel1	PUSH	IY
	RST	#10
	POP	IY
	JR	NC,DelDel2
	CALL	DOSError
	OR	A
	CALL	NZ,BegDIRECTORY
	JP	DelExit
DelDel2	LD	A,#01
	LD	(DeleteFlag),A
	CALL	SetMouse
	JP	DelSkip
DelAll
	BIT	1,(IY+ViewFlg)
	JR	NZ,DelDelete
	LD	A,#01
	LD	(DeleteFlag),A
	CALL	SetClock
	CALL	MakeWindow
	DEFB	#01
	DEFW	#00A0,#0058
	DEFW	#0140,#0030
	DEFB	#02	;Head place
	DEFW	#0004,#0002
	DEFW	#0138,#000A
	DEFB	#00
	DEFB	#01	;Text Line
	DEFW	#0084,#0003
	DEFB	#0F
	DEFB	"Delete files",0
	DEFB	#01	;Text Line
	DEFW	#0008,#0010
	DEFB	#80
	DEFB	"Delete:",0
	DEFB	#03	;Углубление
	DEFW	#0010,#001C
	DEFW	#0120,#000C
	DEFB	#02	;Head place
	DEFW	#0012,#001D
	DEFW	#011C,#000A
	DEFB	#0F
	DEFB	#00
	PUSH	IY
	POP	HL
	LD	DE,BegPath
	ADD	HL,DE
	LD	(DelFrom+1),HL
	LD	IX,ProcessDel
	LD	L,(IY+PanelMFl)
	LD	H,(IY+PanelMFh)
	LD	A,H
	OR	L
	JR	NZ,$+3
	INC	HL
	LD	(IX+ProcMAXl1),L
	LD	(IX+ProcMAXh1),H
	SUB	A
	LD	(IX+ProcMAXl2),A
	LD	(IX+ProcMAXh2),A
	CALL	InitProcess
DeleteAllLp
DelFrom	LD	HL,#0000
	LD	DE,WorkBuffer
	SUB	A
	LDI 
	CP	(HL)
	JR	NZ,$-3
	DEC	HL
	LD	A,"\\"
	CP	(HL)
	JR	Z,$+4
	LD	(DE),A
	INC	DE
	CALL	MakeDELname
	CALL	MakeWindow
	DEFB	#80
	DEFB	#02
	DEFW	#00D0,#0068
	DEFW	#0100,#0008
	DEFB	#08
	DEFB	#00
	LD	IX,#0100
	LD	HL,WorkBuffer
	LD	DE,#00D0
	LD	BC,#0068
	LD	A,#80
	CALL	PrnRangPathL
	LD	C,#31
	RST	#10
	LD	HL,#011B
	OR	A
	SBC	HL,DE
	JP	Z,DelAllExit
	LD	IX,(AdrDelFile)
	LD	DE,WorkBuffer
	PUSH	DE
	CALL	MakeDELname
	POP	HL
	LD	A,(IX+#0E)
	BIT	4,A
	LD	C,#0E		;DELETE
	JR	Z,$+4
	LD	C,#1C		;RMDIR
	PUSH	IY
	RST	#10
	POP	IY
	JR	NC,DelA1
	CALL	DOSError
	OR	A
	CALL	NZ,BegDIRECTORY
	JP	DelAllExit
DelA1	LD	IX,ProcessDel
	LD	L,(IX+ProcCURl1)
	LD	H,(IX+ProcCURh1)
	INC	HL
	LD	(IX+ProcCURl1),L
	LD	(IX+ProcCURh1),H
	CALL	PrnProcess
	LD	C,(IY+PanelMFl)
	LD	B,(IY+PanelMFh)
	LD	A,B
	OR	C
	JP	Z,DelAllExit
	LD	IX,(AdrDelFile)
	RES	0,(IX+#00)
	LD	L,(IY+PanelMBl1)
	LD	H,(IY+PanelMBh1)
	LD	E,(IX+#0F)
	LD	D,(IX+#10)
	OR	A
	SBC	HL,DE
	LD	(IY+PanelMBl1),L
	LD	(IY+PanelMBh1),H
	LD	L,(IY+PanelMBl2)
	LD	H,(IY+PanelMBh2)
	LD	E,(IX+#11)
	LD	D,(IX+#12)
	SBC	HL,DE
	LD	(IY+PanelMBl2),L
	LD	(IY+PanelMBh2),H
	DEC	BC
	LD	(IY+PanelMFl),C
	LD	(IY+PanelMFh),B
	LD	A,B
	OR	C
	JP	Z,DelAllExit
	LD	HL,(AdrDelFile)
	LD	DE,#0018
	ADD	HL,DE
	BIT	0,(HL)
	JR	Z,$-3
	LD	(AdrDelFile),HL
	JP	DeleteAllLp
ProcessDel
	DEFW	#00B2
	DEFW	#0075
	DEFW	#011C
	DEFW	#0000
	DEFW	#0000
	DEFW	#0000
	DEFW	#0000
	DEFW	#0000
	DEFW	#0000
	DEFB	#4F

DelAllExit
	HALT 
	CALL	MakeWindow
	DEFB	#7F
	DEFB	#00
DelExit
	BIT	1,(IY+ViewFlg)
	JR	NZ,DelTreeDIR1
	LD	IX,(AdrDelFile)
	BIT	4,(IX+#0E)
	JR	NZ,DelTreeDIR
DelExt1	POP	AF
	OUT	(PAGE3),A
	LD	HL,SetMouse
	PUSH	HL
	LD	A,(DeleteFlag)
	OR	A
	JP	NZ,RefreshDIR
	CALL	PrintDIR
	CALL	PrnFileInfo
	RET 
DelTreeDIR
	LD	A,(TreeFlag)
	OR	A
	JR	Z,DelExt1
DelTreeDIR1
	LD	A,(DeleteFlag)
	OR	A
	JR	Z,DelExt1
	LD	DE,DelName
	CALL	MakeDELname
	POP	AF
	OUT	(PAGE3),A
	CALL	SetClock
	LD	HL,SetMouse
	EX	(SP),HL
	PUSH	HL
	BIT	1,(IY+ViewFlg)
	EX	AF,AF'
	PUSH	IY
	IN	A,(PAGE3)
	PUSH	AF
	LD	IY,LeftPanel
	BIT	1,(IY+ViewFlg)
	JR	NZ,$+6
	LD	IY,RightPanel
	BIT	0,(IY+PanelFlg)
	LD	A,(DIRpage1)
	JR	Z,$+5
	LD	A,(DIRpage2)
	OUT	(PAGE3),A
	EX	AF,AF'
	JR	NZ,DelTree1
	BIT	0,(IY+PanelFlg)
	LD	HL,LeftPanel
	JR	NZ,$+5
	LD	HL,RightPanel
	LD	DE,BegPath
	ADD	HL,DE
	INC	HL
	INC	HL
	CALL	FindTreeDIR
	JP	C,DelDIRn
	LD	HL,#C001-#10
	LD	BC,#0010
	ADD	HL,BC
	BIT	0,(HL)
	JR	Z,$-3
	DEC	HL
	LD	A,(HL)
	AND	#7F
	INC	A
	LD	LX,A
	ADD	HL,BC
DlTree1	LD	A,(HL)
	AND	#7F
	CP	LX
	JR	NZ,DlTr31
	PUSH	HL
	LD	DE,DelName
	INC	HL
	INC	HL
DlTree2	LD	A,(DE)
	OR	A
	JR	Z,DlTree4
	CP	(HL)
	JR	NZ,DlTree3
	INC	HL
	INC	DE
	JR	DlTree2
DlTree3	POP	HL
	BIT	7,(HL)
	JP	NZ,DelDIRn
DlTr31	ADD	HL,BC
	JR	DlTree1
DlTree4
	LD	A,(HL)
	OR	A
	JR	NZ,DlTree3
	POP	HL
	JR	DelTree2
DelTree1
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	ADD	HL,DE
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,H
	OR	#C0
	LD	H,A
DelTree2
	LD	E,(HL)
	INC	HL
	LD	A,(HL)
	LD	BC,#000E
	ADD	HL,BC
	LD	D,(HL)
	INC	HL
	EX	AF,AF'
	PUSH	DE
	PUSH	HL
	LD	C,L
	LD	B,H
	LD	L,(IY+PanelEFl)
	LD	H,(IY+PanelEFh)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,H
	OR	#C0
	LD	H,A
	OR	A
	SBC	HL,BC
	LD	C,L
	LD	B,H
	POP	HL
	LD	D,H
	LD	A,L
	SUB	#10
	LD	E,A
	JR	NC,$+3
	DEC	D
	PUSH	DE
	LD	A,B
	OR	C
	JR	Z,$+4
	LDIR 
	POP	HL
	POP	DE
	DEC	HL
	LD	(HL),D
	LD	A,L
	SUB	#0E
	LD	L,A
	JR	NC,$+3
	DEC	H
	EX	AF,AF'
	OR	A
	JR	Z,$+3
	LD	(HL),A
	DEC	HL
	BIT	7,E
	JR	Z,DelTree3
	RES	7,E
	LD	BC,#0010
	ADD	HL,BC
DelTr1	SBC	HL,BC
	LD	A,(HL)
	AND	#7F
	CP	E
	JR	C,DelTree3
	JR	Z,$+4
	JR	DelTr1
	SET	7,(HL)
DelTree3
	LD	L,(IY+PanelEFl)
	LD	H,(IY+PanelEFh)
	DEC	HL
	LD	(IY+PanelEFl),L
	LD	(IY+PanelEFh),H
	LD	L,(IY+PanelFFl)
	LD	H,(IY+PanelFFh)
	LD	E,(IY+PanelCFl)
	LD	D,(IY+PanelCFh)
	LD	A,H
	OR	L
	JR	Z,DelTree4
	DEC	HL
	LD	(IY+PanelFFl),L
	LD	(IY+PanelFFh),H
	ADD	HL,DE
	LD	C,(IY+PanelEFl)
	LD	B,(IY+PanelEFh)
	INC	HL
	SBC	HL,BC
	JR	NC,DelTree4
	INC	DE
DelTree4
	LD	(IY+PanelCFl),E
	LD	(IY+PanelCFh),D

	LD	HL,WorkBuffer
	LD	C,#1E
	PUSH	IY
	RST	#10
	POP	IY
	LD	HL,BegDIR
	LD	C,#1D
	PUSH	IY
	RST	#10
	POP	IY
	JR	C,DelDIR2
	LD	HL,TreeName
	LD	DE,WorkBuffer+#100
	LD	BC,#0019
	LD	A,(FileAtribut)
	PUSH	IY
	RST	#10
	POP	IY
	JR	C,DelDIR2
	LD	HL,TreeName
	SUB	A
	LD	C,#0A
	PUSH	IY
	RST	#10
	POP	IY
	JR	C,DelDIR2
	LD	L,(IY+PanelEFl)
	LD	H,(IY+PanelEFh)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	EX	DE,HL
	LD	HL,#C000
	LD	C,#14
	PUSH	AF
	RST	#10
	POP	AF
	LD	C,#12
	RST	#10
DelDIR2	LD	HL,WorkBuffer
	LD	C,#1D
	RST	#10
DelDIRn	POP	AF
	OUT	(PAGE3),A
	POP	IY
	BIT	1,(IY+ViewFlg)
	JR	NZ,DeleteExt1
	CALL	ReadDIR
	CALL	PrintDIR
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	InitScrBar
	LD	A,(IY+ViewFlg)
	AND	#03
	PUSH	AF
	CALL	Z,PrnHScrBar
	POP	AF
	CALL	NZ,PrnVScrBar
	PUSH	IY
	BIT	0,(IY+PanelFlg)
	LD	IY,RightPanel
	JR	Z,$+6
	LD	IY,LeftPanel
	CALL	PrintDIR
	CALL	PrnFileInfo
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	PrnVScrBar
	POP	IY
	RET 
DeleteExt1
	INC	SP
	INC	SP
	CALL	PrintDIR
	CALL	PrnFileInfo
	CALL	SetInvert
	PUSH	IY
	POP	IX
	LD	DE,BegPBar
	ADD	IX,DE
	CALL	InitScrBar
	CALL	PrnVScrBar
	CALL	MakeTreePath
	PUSH	IY
	BIT	0,(IY+PanelFlg)
	LD	IY,RightPanel
	JR	Z,$+6
	LD	IY,LeftPanel
	CALL	NewDIRECTORY
	POP	IY
	RET 
DelName
	DEFS	13,0
;[]==========================================================[]
QuitR
	CALL	MakeWindow
	DEFB	#01
	DEFW	#00D0,#0058
	DEFW	#00E0,#0032
	DEFB	#02	;Head place
	DEFW	#0004,#0002
	DEFW	#00D8,#000A
	DEFB	#00
	DEFB	#01	;Text Line
	DEFW	#0068,#0003
	DEFB	#0F
	DEFB	"Quit",0
	DEFB	#01	;Text Line
	DEFW	#001C,#0013
	DEFB	#80
	DEFB	"Do you want quit Flex Navigator ?",0
	DEFB	#04	;UpRectan
	DEFW	#0020,#0020
	DEFW	#0048,#000E
	DEFB	#01	;Text Line
	DEFW	#003A,#0023
	DEFB	#80
	DEFB	"Yes",0
	DEFB	#04	;UpRectan
	DEFW	#0078,#0020
	DEFW	#0048,#000E
	DEFB	#01	;Text Line
	DEFW	#0096,#0023
	DEFB	#80
	DEFB	"No",0
	DEFB	#00
QuitLoop
	LD	IX,QuitTab
	CALL	TestCoords
	LD	C,#31
	RST	#10
	JR	Z,QuitLoop
	LD	A,B
	OR	A
	JR	NZ,QuitLoop
	LD	A,E
	CP	#1B
	JR	Z,QuitAbort
	CP	#0D
	JR	Z,QuitOkey
	RES	5,A
	CP	"Y"
	JR	Z,QuitOkey
	CP	"N"
	JR	NZ,QuitLoop
QuitAbort
	CALL	MakeWindow
	DEFB	#7F
	DEFB	#00
	SCF 
	RET 
QuitOkey
	CALL	MakeWindow
	DEFB	#7F
	DEFB	#00
	OR	A
	RET 


