
;[]==========================================================[]
;Процедура печати страницы дампа с тек.смещ. от	начала файла
;На вход:
;	   None
;На выход:
;	   None
PrnHEXpage
	LD	HL,PrnHEXinfo
	PUSH	HL
	LD	HL,(PageShift)
	LD	(TempShift),HL	;Запоминаем тек.смещение
	LD	HL,LineBuffer
	LD	BC,#4E20
	LD	(HL),C
	INC	L
	DJNZ	$-2
	LD	B,#1C		;Изнач.позиция печати
PrnHEXl	PUSH	BC
	CALL	PutHLine ;Выводим строку в буфер и на экран
	POP	BC
	JR	C,FillDwnHex	;CY-Закончились	байты для печати
	LD	HL,(TempShift)
	LD	DE,#0010	;Адрес дампа+16
	ADD	HL,DE
	LD	(TempShift),HL
	LD	A,B
	ADD	A,#08
	LD	B,A
	CP	#E4
	JR	NZ,PrnHEXl
PrHEXCr	LD	HL,CursorTab1
	LD	A,(HEXmode)
	OR	A
	JR	Z,$+5
	LD	HL,CursorTab2
	LD	A,(IY+CursorX)
	ADD	A,L
	LD	L,A
	LD	A,H
	ADC	A,#00
	LD	H,A
	LD	E,(HL)
	LD	D,(IY+CursorY)
	CALL	SetCursor
	RET 
;Процедура отчистки нижней области экрана
FillDwnHex
	LD	A,B
	CP	#E4
	JR	Z,PrHEXCr	;Z-нет отчистки
	LD	(FPosHex),A
	LD	A,#E4
	SUB	B
	LD	(FLenHex),A
	CALL	MakeWindow
	DEFB	#80
	DEFB	#02	;Head Place
	DEFW	#0000
FPosHex	DEFW	#0000
	DEFW	#0270
FLenHex	DEFW	#0000
	DEFB	PanelCol
	DEFB	#00
	JR	PrHEXCr
;Процедура печати тек.строки в буфер и на экран
PutHLine
	LD	LX,#00
	LD	HX,B
	LD	HL,(FileLenght)
	LD	BC,(TempShift)
	OR	A
	SBC	HL,BC
	RET	C
	LD	B,#10
	LD	A,H
	OR	A
	JR	NZ,PutHLn
	LD	A,L
	CP	B
	JR	NC,PutHLn
	LD	B,L

PutHLn	IN	A,(PAGE1)
	PUSH	AF
	LD	DE,(TempShift)
	LD	A,D		;Выделяем номер	страницы
	AND	#C0
	RLCA 
	RLCA 
	EXX 
	LD	E,A		;DE - Адрес страницы в списке
	LD	D,high PagesList
	LD	A,(DE)		;Тек.страница
	OUT	(PAGE1),A
	EXX 
	RES	7,D		;Вкл.с #4000
	SET	6,D
	LD	HL,LineBuffer+1	;буфер строки
	EXX 
	LD	HL,LineBuffer+#3D ;место для ASCII кодов
	EXX 
	LD	(HL),"0"
	INC	L
	LD	A,(TempShift+1)
	CALL	PutHexNumb
	LD	A,(TempShift)
	CALL	PutHexNumb
	LD	(HL),":"
	INC	L
	INC	L
	INC	L
	LD	A,B
	OR	A
	JR	Z,PutHLp2
PutHLoop
	BIT	7,D
	JR	Z,PutHLp1
	RES	7,D
	SET	6,D
	EXX 
	INC	E		;DE - Адрес страницы в списке
	LD	A,(DE)		;Тек.страница
	OUT	(PAGE1),A
	EXX 
PutHLp1	LD	A,(DE)
	INC	DE
	EXX 
	LD	(HL),A
	INC	L
	EXX 
	CALL	PutHexNumb	;Процедура конверта
	INC	L
	INC	LX		;Увелич.кол-во введенных байтов
	LD	A,LX
	AND	#03
	JR	NZ,$+3
	INC	L
	DJNZ	PutHLoop
PutHLp2	POP	AF
	OUT	(PAGE1),A
;Процедура отчистки закончившихся байтов
FillHex	LD	A,#10		;Макс.байтов
	SUB	LX		;Тек.кол-во байтов
	JR	Z,FillE2
	LD	B,A
	LD	C,#20
FillE1	LD	(HL),C
	INC	L
	LD	(HL),C
	INC	L
	INC	L
	EXX 
	LD	(HL),#20
	INC	L
	EXX 
	INC	LX
	LD	A,LX		;В центре 2 пробела
	AND	#03
	JR	NZ,$+3
	INC	L
	DJNZ	FillE1
FillE2	LD	HL,LineBuffer
	LD	DE,#0000
	LD	B,#4E
	LD	C,HX
	LD	A,PanelCol*#10+FileCol
	CALL	PrnTxtLnNormC
	OR	A
	RET		;CY-была последняя строка
;Процедура преобразования 8битовых чисел в шестнадц. текст
;На вход:
;	 HL - адрес буфера
;	  А - байт
;На выход:
;	  буфер	с текст.числом
PutHexNumb
	PUSH	AF
	RRCA 
	RRCA 
	RRCA 
	RRCA 
	AND	#0F
	ADD	A,#90
	DAA 
	ADC	A,#40
	DAA 
	LD	(HL),A
	INC	L
	POP	AF
	AND	#0F
	ADD	A,#90
	DAA 
	ADC	A,#40
	DAA 
	LD	(HL),A
	INC	L
	RET 
CursorTab1
	DEFB	09,10,12,13,15,16,18,19
	DEFB	22,23,25,26,28,29,31,32
	DEFB	35,36,38,39,41,42,44,45
	DEFB	48,49,51,52,54,55,57,58
CursorTab2
	DEFB	61,61,62,62,63,63,64,64
	DEFB	65,65,66,66,67,67,68,68
	DEFB	69,69,70,70,71,71,72,72
	DEFB	73,73,74,74,75,75,76,76
;[]==========================================================[]
PrnHEXinfo
	LD	HL,LineH
	LD	DE,ColH
	LD	BC,FreeH
	LD	A,#01
       DUP     #04
	LD	(HL),A
	INC	HL
	LD	(DE),A
	INC	DE
	LD	(BC),A
	INC	BC
       EDUP 
	LD	(HL),A
	LD	(DE),A
	LD	(BC),A
	LD	HL,(CurLine)
	LD	DE,LineH
	INC	HL
	CALL	ConvNumTxt16
	LD	DE,ColH
	LD	A,(IY+CursorX)
	SRL	A
	INC	A
	CALL	ConvNumTxt8
	LD	HL,#C000
	LD	DE,FreeH
	LD	BC,(FileLenght)
	OR	A
	SBC	HL,BC
	CALL	ConvNumTxt16
	LD	HL,ReadyNo
	LD	A,(IY+ReadyFile)
	OR	A
	JR	Z,$+5
	LD	HL,ReadyYes
	LD	DE,#017E
	LD	BC,#0011
	LD	A,#80
	CALL	PrnTxtLnIFF
	LD	HL,LineH
	LD	DE,#01AE
	LD	BC,#0011
	LD	A,#80
	CALL	PrnTxtLnIFF
	LD	HL,ColH
	LD	DE,#01F8
	LD	BC,#0011
	LD	A,#80
	CALL	PrnTxtLnIFF
	LD	HL,FreeH
	LD	DE,#0248
	LD	BC,#0011
	LD	A,#80
	CALL	PrnTxtLnIFF
	LD	IX,EditVBar
	LD	HL,(ELines)
	LD	DE,(EquipLines)
	OR	A
	SBC	HL,DE
	JR	Z,TstLinH
	LD	(ELines),DE
	CALL	InitScrBar
	LD	HL,(CurLine)
	LD	(CLine),HL
	CALL	PrnVScrBar
	RET 
TstLinH	LD	HL,(CLine)
	LD	DE,(CurLine)
	OR	A
	SBC	HL,DE
	RET	Z
	LD	(CLine),DE
	CALL	PrnVScrBar
	RET 
LineH
	DEFS	6,0
ColH
	DEFS	6,0
FreeH
	DEFS	6,0
;[]==========================================================[]
HPutSymbol
	CP	#08
	JP	Z,HDeleteByte
	CP	#09
	JP	Z,ChHEXmode
	LD	C,A
	LD	HL,(LineShift)
	LD	E,(IY+CursorX)
	SRL	E
	LD	D,#00
	ADD	HL,DE
	LD	A,H
	CP	#C0
	RET	NC
	LD	A,(HEXmode)
	OR	A
	JR	NZ,HPutSymbA
	LD	A,C
	CP	"a"
	JR	C,$+4
	RES	5,A
	CP	"0"
	RET	C
	CP	"F"+1
	RET	NC
	SUB	"0"
	CP	#0A
	JR	C,HPutSH1
	SUB	#07
	CP	#0A
	RET	C
HPutSH1	LD	C,A
	BIT	0,(IY+CursorX)
	LD	B,#F0
	JR	NZ,HPutSH2
	LD	B,#0F
	RLC	C
	RLC	C
	RLC	C
	RLC	C
HPutSH2	EX	DE,HL
	LD	HL,(FileLenght)
	OR	A
	SBC	HL,DE
	EX	DE,HL
	LD	A,#00
	JR	Z,$+4
	LD	A,#01
	EX	AF,AF'
	IN	A,(PAGE1)
	PUSH	AF
	LD	A,H		;Выделяем номер	страницы
	AND	#C0
	RLCA 
	RLCA 
	LD	E,A		;DE - Адрес страницы в списке
	LD	D,high PagesList
	LD	A,(DE)		;Тек.страница
	OUT	(PAGE1),A
	RES	7,H		;Вкл.с #4000
	SET	6,H
	EX	AF,AF'
	OR	A
	JR	NZ,$+3
	LD	(HL),A
	EX	AF,AF'
	LD	A,(HL)
	AND	B
	OR	C
	LD	(HL),A
	POP	AF
	OUT	(PAGE1),A
	JR	HPrnSymbol
HPutSymbA
	EX	DE,HL
	LD	HL,(FileLenght)
	OR	A
	SBC	HL,DE
	EX	DE,HL
	LD	A,#00
	JR	Z,$+4
	LD	A,#01
	EX	AF,AF'
	IN	A,(PAGE1)
	PUSH	AF
	LD	A,H		;Выделяем номер	страницы
	AND	#C0
	RLCA 
	RLCA 
	LD	E,A		;DE - Адрес страницы в списке
	LD	D,high PagesList
	LD	A,(DE)		;Тек.страница
	OUT	(PAGE1),A
	RES	7,H		;Вкл.с #4000
	SET	6,H
	LD	(HL),C
	POP	AF
	OUT	(PAGE1),A
HPrnSymbol
	EX	AF,AF'
	OR	A
	JR	NZ,HPrnS1
	LD	HL,(FileLenght)
	INC	HL
	LD	(FileLenght),HL
HPrnS1	CALL	HPrnS2
	LD	(IY+ReadyFile),#01
	CALL	HCursorRight
	LD	HL,(LineShift)
	LD	E,(IY+CursorX)
	SRL	E
	LD	D,#00
	ADD	HL,DE
	EX	DE,HL
	LD	HL,(FileLenght)
	OR	A
	SBC	HL,DE
	RET	NZ
	LD	A,(IY+CursorX)
	OR	A
	RET	NZ
HPrnS2	CALL	ResCursor
	LD	HL,(LineShift)
	LD	(TempShift),HL
	LD	A,(IY+CursorY)
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,#1C
	LD	B,A
	CALL	PutHLine
	CALL	PrHEXCr
	RET 
;[]----------------------------------------------------------[]
HDeleteByte
	LD	HL,(LineShift)
	LD	E,(IY+CursorX)
	SRL	E
	LD	D,#00
	ADD	HL,DE
	EX	DE,HL
	LD	HL,(FileLenght)
	OR	A
	PUSH	HL
	SBC	HL,DE
	POP	HL
	JP	NZ,HCursorLeft
	LD	A,H
	OR	L
	RET	Z
	DEC	HL
	LD	(FileLenght),HL
	LD	A,E
	AND	#0F
	JR	NZ,HDelS1
	LD	HL,EmptyAddr
	LD	DE,#0008
	LD	A,(IY+CursorY)
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,#1C
	LD	C,A
	LD	B,#06
	LD	A,PanelCol*#10+FileCol
	CALL	PrnTxtLnNormC
HDelS1	LD	(IY+ReadyFile),#01
	RES	0,(IY+CursorX)
	LD	A,#01
	CALL	HCursorLeft+3
	CALL	ResCursor
	LD	HL,(LineShift)
	LD	(TempShift),HL
	LD	A,(IY+CursorY)
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,#1C
	LD	B,A
	CALL	PutHLine
	CALL	PrHEXCr
	RET 
EmptyAddr
	DEFB	"      "
;[]----------------------------------------------------------[]
ChHEXmode
	CALL	ResCursor
	RES	0,(IY+CursorX)
	LD	A,(HEXmode)
	XOR	#01
	LD	(HEXmode),A
	CALL	PrHEXCr
	RET 
;[]----------------------------------------------------------[]
;Курсор	влево на одно место
HCursorLeft
	LD	A,(HEXmode)
	LD	C,A
	LD	A,(IY+CursorX)
	DEC	A
	AND	#1F
	CP	#1F
	JR	NZ,HCurLf1
	LD	B,A
	LD	HL,(LineShift)
	LD	A,H
	OR	L
	RET	Z
	LD	A,B
	SUB	C
	LD	(IY+CursorX),A
	JP	HCursorUp
HCurLf1	SUB	C
	LD	(IY+CursorX),A
	CALL	ResCursor
	CALL	PrHEXCr
	CALL	PrnHEXinfo
	RET 
;[]----------------------------------------------------------[]
;Курсор	вправо на одно место
HCursorRight
	LD	HL,(LineShift)
	LD	DE,(FileLenght)
	LD	C,(IY+CursorX)
	SRL	C
	LD	B,#00
	ADD	HL,BC
	SBC	HL,DE
	RET	Z
	LD	A,(HEXmode)
	LD	C,A
	LD	A,(IY+CursorX)
	INC	A
	ADD	A,C
	AND	#1F
	JR	NZ,HCurRg1
	LD	B,A
	LD	HL,(LineShift)
	LD	DE,#0010
	ADD	HL,DE
	EX	DE,HL
	LD	HL,(FileLenght)
	SBC	HL,DE
	RET	C
	LD	A,B
	LD	(IY+CursorX),A
	JP	HCursorDown
HCurRg1	LD	(IY+CursorX),A
	CALL	ResCursor
	CALL	PrHEXCr
	CALL	PrnHEXinfo
	RET 
;[]----------------------------------------------------------[]
HHomeString
	LD	A,(IY+CursorX)
	CP	#02
	RET	C
	LD	(IY+CursorX),#00
	CALL	ResCursor
	CALL	PrHEXCr
	CALL	PrnHEXinfo
	RET 
;[]----------------------------------------------------------[]
HEndString
	LD	A,(IY+CursorX)
	CP	#1E
	RET	NC
	LD	(IY+CursorX),#1E
	CALL	ResCursor
	CALL	PrHEXCr
	CALL	PrnHEXinfo
	RET 
;[]----------------------------------------------------------[]
HCursorUp
	LD	HL,(LineShift)
	LD	A,H
	OR	L
	RET	Z
	LD	A,(IY+CursorY)
	OR	A
	JP	Z,HScrollUp
	LD	DE,#0010
	SBC	HL,DE
	LD	(LineShift),HL
	DEC	(IY+CursorY)
	CALL	ResCursor
	CALL	PrHEXCr
	JP	HCursorExit
HCursorDown
	LD	HL,(FileLenght)
	LD	DE,(LineShift)
	LD	A,(IY+CursorX)
	SRL	A
	ADD	A,#10
	LD	C,A
	LD	B,#00
	EX	DE,HL
	ADD	HL,BC
	EX	DE,HL
	SBC	HL,DE
	JP	C,HEndFile
	LD	A,(IY+CursorY)
	CP	#18
	JP	Z,HScrollDown
	LD	A,E
	AND	#F0
	LD	E,A
	LD	(LineShift),DE
	INC	(IY+CursorY)
	CALL	ResCursor
	CALL	PrHEXCr
	JP	HCursorExit
HScrollUp
	LD	HL,(PageShift)
	LD	A,H
	OR	L
	JP	Z,HCursorUp
	LD	DE,#0010
	SBC	HL,DE
	LD	(PageShift),HL
	LD	(TempShift),HL
	LD	HL,(LineShift)
	SBC	HL,DE
	LD	(LineShift),HL
	CALL	ResCursor
	CALL	ScrollSCRdown
	LD	B,#1C
	CALL	PutHLine
	CALL	PrHEXCr
	JP	HCursorExit
HScrollDown
	LD	HL,(PageShift)
	LD	DE,#0190
	ADD	HL,DE
	EX	DE,HL
	LD	HL,(FileLenght)
	OR	A
	SBC	HL,DE		;Проверяем на конец файла
	JP	C,HCursorDown
	LD	(TempShift),DE	;Запоминаем тек.смещение
	LD	HL,(PageShift)
	LD	DE,#0010
	ADD	HL,DE
	LD	(PageShift),HL
	LD	HL,(LineShift)
	ADD	HL,DE
	LD	(LineShift),HL
	CALL	ResCursor
	CALL	ScrollSCRup
	LD	B,#DC
	CALL	PutHLine
	CALL	PrHEXCr
HCursorExit
	LD	HL,(LineShift)
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	LD	(CurLine),HL
	CALL	PrnHEXinfo
	RET 
;[]----------------------------------------------------------[]
HPageUp
	LD	HL,(PageShift)
	LD	A,H
	OR	L
	JP	Z,HBegFile
	LD	DE,#0190
	OR	A
	SBC	HL,DE
	JR	NC,$+5
	LD	HL,#0000
	LD	(PageShift),HL
	LD	HL,(LineShift)
	OR	A
	SBC	HL,DE
	JR	NC,$+5
	LD	HL,#0000
	LD	(LineShift),HL
	JR	HPageExit
;[]----------------------------------------------------------[]
HPageDown
	LD	HL,(PageShift)
	LD	BC,#0190
	ADD	HL,BC
	EX	DE,HL
	LD	HL,(FileLenght)
	OR	A
	SBC	HL,DE		;Проверяем на конец файла
	JP	C,HEndFile
	LD	(PageShift),DE
	LD	HL,(LineShift)
	ADD	HL,BC
	EX	DE,HL
	LD	HL,(FileLenght)
	OR	A
	SBC	HL,DE		;Проверяем на конец файла
	JP	C,HEndFile
	LD	(LineShift),DE
HPageExit
	LD	HL,(LineShift)
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	LD	(CurLine),HL
	CALL	PrnHEXpage	;Печатаем страницу
	RET 
;[]----------------------------------------------------------[]
;В начало файла
HBegFile
	LD	HL,(LineShift)
	LD	A,(IY+CursorX)
	OR	H
	OR	L
	RET	Z
	SUB	A
	LD	(IY+CursorX),A
	LD	(IY+CursorY),A
	LD	HL,#0000	;Смещение = 0000
	LD	(LineShift),HL
	LD	(PageShift),HL
	LD	(CurLine),HL
	CALL	PrnHEXpage	;Печатаем страницу
	RET 
;[]----------------------------------------------------------[]
;В конец файла
HEndFile
	LD	HL,(LineShift)
	LD	E,(IY+CursorX)
	SRL	E
	LD	D,#00
	ADD	HL,DE
	EX	DE,HL
	LD	HL,(FileLenght)
	OR	A
	PUSH	HL
	SBC	HL,DE		;Проверяем на конец файла
	POP	HL
	RET	Z
	LD	HL,(PageShift)
	LD	BC,#0190
	ADD	HL,BC
	EX	DE,HL
	LD	HL,(FileLenght)
	OR	A
	SBC	HL,DE		;Проверяем на конец файла
	ADD	HL,DE
	JR	C,HEnd1
	SBC	HL,BC
	LD	A,L
	AND	#F0
	LD	L,A
	LD	DE,#0010
	ADD	HL,DE
	LD	(PageShift),HL
HEnd1	LD	HL,(FileLenght)
	LD	DE,(PageShift)
	OR	A
	SBC	HL,DE
	PUSH	HL
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	LD	(IY+CursorY),L
	POP	DE
	LD	A,E
	AND	#F0
	LD	E,A
	LD	HL,(PageShift)
	ADD	HL,DE
	LD	(LineShift),HL
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	LD	(CurLine),HL
	LD	A,(FileLenght)
	AND	#0F
	ADD	A,A
	LD	(IY+CursorX),A
	CALL	PrnHEXpage	;Печатаем страницу
	RET 
;[]----------------------------------------------------------[]
HNewHEXPos
	EX	DE,HL
	LD	BC,#001C
	OR	A
	SBC	HL,BC
	LD	A,L
	AND	#F8
	LD	L,A
	SLA	L
	RL	H
	PUSH	HL
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	LD	A,L
	EX	AF,AF'
	EX	DE,HL
	LD	BC,#0048
	OR	A
	SBC	HL,BC
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	LD	A,L
	LD	HL,HNewPosTb
	ADD	A,A
	ADD	A,L
	LD	L,A
	JR	NC,$+3
	INC	H
	LD	A,(HL)
	INC	HL
	LD	L,(HL)
	LD	H,A
	POP	DE
	OR	A
	RET	M
	PUSH	HL
	LD	HL,(PageShift)
	ADD	HL,DE
	EX	DE,HL
	PUSH	DE
	ADD	A,E
	LD	E,A
	JR	NC,$+3
	INC	D
	LD	HL,(FileLenght)
	OR	A
	SBC	HL,DE
	POP	DE
	POP	HL
	RET	C
	LD	A,H
	ADD	A,A
	ADD	A,L
	LD	(IY+CursorX),A
	EX	AF,AF'
	LD	(IY+CursorY),A
	LD	(LineShift),DE
	SRL	D
	RR	E
	SRL	D
	RR	E
	SRL	D
	RR	E
	SRL	D
	RR	E
	LD	(CurLine),DE
	CALL	ResCursor
	SUB	A
	LD	(HEXmode),A
	CALL	PrHEXCr
	CALL	PrnHEXinfo
	RET 
HNewPosTb
	DEFB	00,00,00,01,-1,-1
	DEFB	01,00,01,01,-1,-1
	DEFB	02,00,02,01,-1,-1
	DEFB	03,00,03,01,-1,-1,-1,-1
	DEFB	04,00,04,01,-1,-1
	DEFB	05,00,05,01,-1,-1
	DEFB	06,00,06,01,-1,-1
	DEFB	07,00,07,01,-1,-1,-1,-1
	DEFB	08,00,08,01,-1,-1
	DEFB	09,00,09,01,-1,-1
	DEFB	10,00,10,01,-1,-1
	DEFB	11,00,11,01,-1,-1,-1,-1
	DEFB	12,00,12,01,-1,-1
	DEFB	13,00,13,01,-1,-1
	DEFB	14,00,14,01,-1,-1
	DEFB	15,00,15,01,-1,-1,-1,-1
HNewASCPos
	EX	DE,HL
	LD	BC,#001C
	OR	A
	SBC	HL,BC
	LD	A,L
	AND	#F8
	LD	L,A
	SLA	L
	RL	H
	PUSH	HL
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	LD	A,L
	EX	AF,AF'
	EX	DE,HL
	LD	BC,#01E8
	OR	A
	SBC	HL,BC
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	POP	DE
	LD	A,L
	PUSH	HL
	LD	HL,(PageShift)
	ADD	HL,DE
	EX	DE,HL
	PUSH	DE
	ADD	A,E
	LD	E,A
	JR	NC,$+3
	INC	D
	LD	HL,(FileLenght)
	OR	A
	SBC	HL,DE
	POP	DE
	POP	HL
	RET	C
	LD	A,L
	ADD	A,A
	LD	(IY+CursorX),A
	EX	AF,AF'
	LD	(IY+CursorY),A
	LD	(LineShift),DE
	SRL	D
	RR	E
	SRL	D
	RR	E
	SRL	D
	RR	E
	SRL	D
	RR	E
	LD	(CurLine),DE
	CALL	ResCursor
	LD	A,#01
	LD	(HEXmode),A
	CALL	PrHEXCr
	CALL	PrnHEXinfo
	RET 
;[]----------------------------------------------------------[]
;Процедура ввода нового	указателя смещения в файле
HGoTo	LD	HL,(FileLenght)
	LD	A,H		;Проверяем,что длина
	OR	A		;файла больше 16 байт
	JR	NZ,HGoToOk
	LD	A,L
	CP	#11
	RET	C		;меньше	16байт
HGoToOk	CALL	ResCursor
	LD	HL,NewShift	;Буфер для ввода нового	указ.
	SUB	A
	LD	(CursPos+1),A	;Позиция ввода в буфере
	INC	A
	LD	(BuffFlg+1),A
	LD	(HL),"0"
	INC	HL
	LD	A,(PageShift+1)
	CALL	PutHexNumb	;Заносим в буфер текущее смещ.
	LD	A,(PageShift)	;в текстовом виде
	CALL	PutHexNumb
HGoToRet			;Выводим на экран буфер	и
	CALL	PrintHGT	;печатаем курсор
HGoToLp	HALT			;Ожидаем прерывание
	CALL	ChangeCurs	;проверям на смену курсора
	LD	C,#03
	RST	#30
	BIT	0,A
	JP	NZ,HGTescape
	LD	C,#31		;Ожидаем нажатия клавиши
	RST	#10
	JR	Z,HGoToLp	;Z - не	нажата
	LD	A,B
	AND	#3F
	JR	NZ,HGoToLp
	LD	A,E
	OR	A
	JR	Z,HGoToSys	;A=0 сист.клавиша
	CP	#0D
	JP	Z,HGTenter	;нажат Enter
	CP	#08
	JR	Z,HGTdelete	;нажат BackSpace
	CP	#1B
	JP	Z,HGTescape	;нажат Esc
	CP	#20
	JR	C,HGoToLp	;код<#20 нам не	подходит
	LD	C,A		;сохр. ASCII код
BuffFlg	LD	A,#00
	OR	A
	CALL	NZ,ClearBuff
CursPos	LD	A,#00		;тек.позиция печати в буфере
	LD	B,A		;сохр.тек.поз.
	LD	HL,NewShift	;Смещ.от начала	буфера
	ADD	A,L
	LD	L,A
	JR	NC,$+3
	INC	H
	LD	(HL),C		;Заносим код в буфер
	LD	A,B		;тек.поз.
	CP	#04		;Позиция в буфере (7-последняя)
	JR	Z,HGoToRet	;печатаем строку и курсор
	INC	A		;след.позиция
	LD	(CursPos+1),A
	JR	HGoToRet	;печатаем строку и курсор
ClearBuff
	LD	HL,NewShift
	LD	B,#05
	LD	A,#20
	LD	(HL),A
	INC	HL
	DJNZ	$-2
	SUB	A
	LD	(BuffFlg+1),A
	RET 
HGTdelete			;Забой
	SUB	A
	LD	(BuffFlg+1),A
	LD	A,(CursPos+1)	;Тек.позиция в буфере
	OR	A
	JR	Z,HGoToLp	;0 - выходим
	DEC	A
	LD	(CursPos+1),A	;предид.позиция
	LD	HL,NewShift
	ADD	A,L		;смещ.в	буфере
	LD	L,A
	JR	NC,$+3
	INC	H
	LD	(HL)," "	;Забиваем пробелом
	JR	HGoToRet
HGoToSys			;системная клавиша
	LD	A,D
	CP	#54		;<-
	JR	Z,HGTleft
	CP	#56		;->
	JR	Z,HGTright
	JR	HGoToLp
HGTleft				;Курсор	влево
	SUB	A
	LD	(BuffFlg+1),A
	LD	A,(CursPos+1)	;Тек.позиция в буфере
	OR	A
	JP	Z,HGoToLp	;0 - выходим
	DEC	A
	LD	(CursPos+1),A	;Уменьш.поз.
	JP	HGoToRet
HGTright
	SUB	A
	LD	(BuffFlg+1),A
	LD	A,(CursPos+1)	;Тек.позиция в буфере
	CP	#04
	JP	Z,HGoToLp	;7 - последняя
	INC	A
	LD	(CursPos+1),A	;Увелич.поз.
	JP	HGoToRet
PrintHGT		;Процедура вывода строки и курсора
	LD	HL,NewShift
	LD	DE,#0008
	LD	BC,#051C
	LD	A,PanelCol*#10+FileCol
	CALL	PrnTxtLnNormC
	LD	A,(CursPos+1)	;Позиция вывода	курсора
	INC	A
	LD	L,A
	LD	H,#00
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	EX	DE,HL
	LD	HL,TCursor
	LD	(HL),"«"
	LD	BC,#011C
	LD	A,PanelCol*#10+FileCol
	CALL	PrnTxtLnNormC
	LD	A,#01		;Номер выведенного курсора
	LD	(CurCurs+1),A
	LD	A,#06		;Ожидание для смены курсора
	LD	(CurWait+1),A
	RET 
ChangeCurs		;Процедура смены курсора
CurWait	LD	A,#00	;Задержка между	сменой курсора
	DEC	A
	LD	(CurWait+1),A
	RET	NZ	;еще не	время
	LD	A,(CursPos+1)
	INC	A
	LD	L,A
	LD	H,#00	;Тек.знакоместо
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	EX	DE,HL
	LD	HL,NewShift	;Смещ.в	буфере
	LD	A,(CursPos+1)
	ADD	A,L
	LD	L,A
	JR	NC,CurCurs
	INC	H
CurCurs	LD	A,#00		;Номер текущего	курсора
	XOR	#01		;Меняем	курсор
	LD	(CurCurs+1),A
	LD	A,(HL)
	JR	Z,$+4		;Печатаем
	LD	A,"«"
	LD	HL,TCursor
	LD	(HL),A
	LD	BC,#011C
	LD	A,PanelCol*#10+FileCol
	CALL	PrnTxtLnNormC
	LD	A,#0C		;Ожидание для смены курсора
	LD	(CurWait+1),A
	RET 
TCursor
	DEFB	" "
HGTenter			;Клавиша ENTER
	SUB	A		;При ошибке вернемся с курсором
	LD	(CursPos+1),A	;в нулевой позиции
	LD	BC,NewShift	;Буфер строки
	CALL	GetHexNum16	;Переводим текст в 32бит число
	JP	C,HGoToRet	;CY - синтакс.ошибка
	LD	C,E
	LD	B,D
	LD	A,L		;Адрес кратный 16
	AND	#F0
	LD	L,A
	EX	DE,HL		;Смещ.в	BC+DE
	LD	HL,(FileLenght)	;Проверяем,что смещение	в
	OR	A		;пределах файла
	SBC	HL,DE
	EX	DE,HL
	JR	NC,HGTent1	;NZ-в пределах
	LD	HL,(FileLenght)
	LD	A,L
	AND	#F0
	LD	L,A
HGTent1	LD	(PageShift),HL
	LD	(LineShift),HL
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	LD	(CurLine),HL
	SUB	A
	LD	(IY+CursorX),A
	LD	(IY+CursorY),A
	CALL	PrnHEXpage	;Печатаем страницу
	RET 
HGTescape		;Нажат Escape
	LD	HL,NewShift	;Буфер строки
	PUSH	HL
	LD	(HL),"0"
	INC	HL
	LD	A,(PageShift+1)	;Заносим тек.смещение
	CALL	PutHexNumb
	LD	A,(PageShift)
	CALL	PutHexNumb
	POP	HL
	LD	DE,#0008
	LD	BC,#051C
	LD	A,PanelCol*#10+FileCol
	CALL	PrnTxtLnNormC
	CALL	PrHEXCr
	CALL	ResFire
	RET			;Выходим
NewShift
	DEFB	"     ",0
;Процедура конвертирования 32битового шестн.текстового числа
;На вход:
;	  BC - Адрес буфера с текстом (0-конец буфера)
;На выход:
;	  DE+HL	- Число	32бит
;	  CY - синтаксическая ошибка
GetHexNum16
	LD	HL,#0000
GetHNlp	LD	A,(BC)
	INC	BC
	OR	A
	RET	Z
	CP	" "
	JR	Z,GetHNlp
	CP	#61
	JR	C,$+4
	SUB	#20
	CP	#30
	RET	C
	CP	#47
	CCF 
	RET	C
	SUB	#30
	CP	#0A
	JR	C,GetHNum
	SUB	#07
	CP	#0A
	RET	C
GetHNum	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	OR	L
	LD	L,A
	JR	GetHNlp



